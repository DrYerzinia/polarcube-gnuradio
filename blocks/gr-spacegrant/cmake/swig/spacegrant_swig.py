# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_spacegrant_swig', [dirname(__file__)])
        except ImportError:
            import _spacegrant_swig
            return _spacegrant_swig
        if fp is not None:
            try:
                _mod = imp.load_module('_spacegrant_swig', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _spacegrant_swig = swig_import_helper()
    del swig_import_helper
else:
    import _spacegrant_swig
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr



def high_res_timer_now():
    """high_res_timer_now() -> gr::high_res_timer_type"""
    return _spacegrant_swig.high_res_timer_now()

def high_res_timer_now_perfmon():
    """high_res_timer_now_perfmon() -> gr::high_res_timer_type"""
    return _spacegrant_swig.high_res_timer_now_perfmon()

def high_res_timer_tps():
    """high_res_timer_tps() -> gr::high_res_timer_type"""
    return _spacegrant_swig.high_res_timer_tps()

def high_res_timer_epoch():
    """high_res_timer_epoch() -> gr::high_res_timer_type"""
    return _spacegrant_swig.high_res_timer_epoch()
class udp_debug(object):
    """Proxy of C++ gr::spacegrant::udp_debug class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """make() -> udp_debug_sptr"""
        return _spacegrant_swig.udp_debug_make()

    make = staticmethod(make)
    __swig_destroy__ = _spacegrant_swig.delete_udp_debug
    __del__ = lambda self: None
udp_debug_swigregister = _spacegrant_swig.udp_debug_swigregister
udp_debug_swigregister(udp_debug)

def udp_debug_make():
    """udp_debug_make() -> udp_debug_sptr"""
    return _spacegrant_swig.udp_debug_make()

class udp_debug_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::spacegrant::udp_debug)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::spacegrant::udp_debug)> self) -> udp_debug_sptr
        __init__(boost::shared_ptr<(gr::spacegrant::udp_debug)> self, udp_debug p) -> udp_debug_sptr
        """
        this = _spacegrant_swig.new_udp_debug_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(udp_debug_sptr self) -> udp_debug"""
        return _spacegrant_swig.udp_debug_sptr___deref__(self)

    __swig_destroy__ = _spacegrant_swig.delete_udp_debug_sptr
    __del__ = lambda self: None

    def make(self):
        """make(udp_debug_sptr self) -> udp_debug_sptr"""
        return _spacegrant_swig.udp_debug_sptr_make(self)


    def history(self):
        """history(udp_debug_sptr self) -> unsigned int"""
        return _spacegrant_swig.udp_debug_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(udp_debug_sptr self, int which, int delay)
        declare_sample_delay(udp_debug_sptr self, unsigned int delay)
        """
        return _spacegrant_swig.udp_debug_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(udp_debug_sptr self, int which) -> unsigned int"""
        return _spacegrant_swig.udp_debug_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(udp_debug_sptr self) -> int"""
        return _spacegrant_swig.udp_debug_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(udp_debug_sptr self) -> double"""
        return _spacegrant_swig.udp_debug_sptr_relative_rate(self)


    def start(self):
        """start(udp_debug_sptr self) -> bool"""
        return _spacegrant_swig.udp_debug_sptr_start(self)


    def stop(self):
        """stop(udp_debug_sptr self) -> bool"""
        return _spacegrant_swig.udp_debug_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(udp_debug_sptr self, unsigned int which_input) -> uint64_t"""
        return _spacegrant_swig.udp_debug_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(udp_debug_sptr self, unsigned int which_output) -> uint64_t"""
        return _spacegrant_swig.udp_debug_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(udp_debug_sptr self) -> int"""
        return _spacegrant_swig.udp_debug_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(udp_debug_sptr self, int m)"""
        return _spacegrant_swig.udp_debug_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(udp_debug_sptr self)"""
        return _spacegrant_swig.udp_debug_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(udp_debug_sptr self) -> bool"""
        return _spacegrant_swig.udp_debug_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(udp_debug_sptr self, int m)"""
        return _spacegrant_swig.udp_debug_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(udp_debug_sptr self) -> int"""
        return _spacegrant_swig.udp_debug_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(udp_debug_sptr self, int i) -> long"""
        return _spacegrant_swig.udp_debug_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(udp_debug_sptr self, long max_output_buffer)
        set_max_output_buffer(udp_debug_sptr self, int port, long max_output_buffer)
        """
        return _spacegrant_swig.udp_debug_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(udp_debug_sptr self, int i) -> long"""
        return _spacegrant_swig.udp_debug_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(udp_debug_sptr self, long min_output_buffer)
        set_min_output_buffer(udp_debug_sptr self, int port, long min_output_buffer)
        """
        return _spacegrant_swig.udp_debug_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(udp_debug_sptr self) -> float"""
        return _spacegrant_swig.udp_debug_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(udp_debug_sptr self) -> float"""
        return _spacegrant_swig.udp_debug_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(udp_debug_sptr self) -> float"""
        return _spacegrant_swig.udp_debug_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(udp_debug_sptr self) -> float"""
        return _spacegrant_swig.udp_debug_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(udp_debug_sptr self) -> float"""
        return _spacegrant_swig.udp_debug_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(udp_debug_sptr self) -> float"""
        return _spacegrant_swig.udp_debug_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(udp_debug_sptr self, int which) -> float
        pc_input_buffers_full(udp_debug_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.udp_debug_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(udp_debug_sptr self, int which) -> float
        pc_input_buffers_full_avg(udp_debug_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.udp_debug_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(udp_debug_sptr self, int which) -> float
        pc_input_buffers_full_var(udp_debug_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.udp_debug_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(udp_debug_sptr self, int which) -> float
        pc_output_buffers_full(udp_debug_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.udp_debug_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(udp_debug_sptr self, int which) -> float
        pc_output_buffers_full_avg(udp_debug_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.udp_debug_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(udp_debug_sptr self, int which) -> float
        pc_output_buffers_full_var(udp_debug_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.udp_debug_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(udp_debug_sptr self) -> float"""
        return _spacegrant_swig.udp_debug_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(udp_debug_sptr self) -> float"""
        return _spacegrant_swig.udp_debug_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(udp_debug_sptr self) -> float"""
        return _spacegrant_swig.udp_debug_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(udp_debug_sptr self) -> float"""
        return _spacegrant_swig.udp_debug_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(udp_debug_sptr self) -> float"""
        return _spacegrant_swig.udp_debug_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(udp_debug_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _spacegrant_swig.udp_debug_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(udp_debug_sptr self)"""
        return _spacegrant_swig.udp_debug_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(udp_debug_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _spacegrant_swig.udp_debug_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(udp_debug_sptr self) -> int"""
        return _spacegrant_swig.udp_debug_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(udp_debug_sptr self) -> int"""
        return _spacegrant_swig.udp_debug_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(udp_debug_sptr self, int priority) -> int"""
        return _spacegrant_swig.udp_debug_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(udp_debug_sptr self) -> std::string"""
        return _spacegrant_swig.udp_debug_sptr_name(self)


    def symbol_name(self):
        """symbol_name(udp_debug_sptr self) -> std::string"""
        return _spacegrant_swig.udp_debug_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(udp_debug_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.udp_debug_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(udp_debug_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.udp_debug_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(udp_debug_sptr self) -> long"""
        return _spacegrant_swig.udp_debug_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(udp_debug_sptr self) -> basic_block_sptr"""
        return _spacegrant_swig.udp_debug_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(udp_debug_sptr self, int ninputs, int noutputs) -> bool"""
        return _spacegrant_swig.udp_debug_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(udp_debug_sptr self) -> std::string"""
        return _spacegrant_swig.udp_debug_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(udp_debug_sptr self, std::string name)"""
        return _spacegrant_swig.udp_debug_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(udp_debug_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _spacegrant_swig.udp_debug_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(udp_debug_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.udp_debug_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(udp_debug_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.udp_debug_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(udp_debug_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _spacegrant_swig.udp_debug_sptr_message_subscribers(self, which_port)

udp_debug_sptr_swigregister = _spacegrant_swig.udp_debug_sptr_swigregister
udp_debug_sptr_swigregister(udp_debug_sptr)


udp_debug_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
udp_debug = udp_debug.make;

class hdlc_framer(object):
    """Proxy of C++ gr::spacegrant::hdlc_framer class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(frame_tag_name, number_of_flags):
        """make(std::string const frame_tag_name, int const number_of_flags) -> hdlc_framer_sptr"""
        return _spacegrant_swig.hdlc_framer_make(frame_tag_name, number_of_flags)

    make = staticmethod(make)
    __swig_destroy__ = _spacegrant_swig.delete_hdlc_framer
    __del__ = lambda self: None
hdlc_framer_swigregister = _spacegrant_swig.hdlc_framer_swigregister
hdlc_framer_swigregister(hdlc_framer)

def hdlc_framer_make(frame_tag_name, number_of_flags):
    """hdlc_framer_make(std::string const frame_tag_name, int const number_of_flags) -> hdlc_framer_sptr"""
    return _spacegrant_swig.hdlc_framer_make(frame_tag_name, number_of_flags)

class hdlc_framer_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::spacegrant::hdlc_framer)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::spacegrant::hdlc_framer)> self) -> hdlc_framer_sptr
        __init__(boost::shared_ptr<(gr::spacegrant::hdlc_framer)> self, hdlc_framer p) -> hdlc_framer_sptr
        """
        this = _spacegrant_swig.new_hdlc_framer_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(hdlc_framer_sptr self) -> hdlc_framer"""
        return _spacegrant_swig.hdlc_framer_sptr___deref__(self)

    __swig_destroy__ = _spacegrant_swig.delete_hdlc_framer_sptr
    __del__ = lambda self: None

    def make(self, frame_tag_name, number_of_flags):
        """make(hdlc_framer_sptr self, std::string const frame_tag_name, int const number_of_flags) -> hdlc_framer_sptr"""
        return _spacegrant_swig.hdlc_framer_sptr_make(self, frame_tag_name, number_of_flags)


    def history(self):
        """history(hdlc_framer_sptr self) -> unsigned int"""
        return _spacegrant_swig.hdlc_framer_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(hdlc_framer_sptr self, int which, int delay)
        declare_sample_delay(hdlc_framer_sptr self, unsigned int delay)
        """
        return _spacegrant_swig.hdlc_framer_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(hdlc_framer_sptr self, int which) -> unsigned int"""
        return _spacegrant_swig.hdlc_framer_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(hdlc_framer_sptr self) -> int"""
        return _spacegrant_swig.hdlc_framer_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(hdlc_framer_sptr self) -> double"""
        return _spacegrant_swig.hdlc_framer_sptr_relative_rate(self)


    def start(self):
        """start(hdlc_framer_sptr self) -> bool"""
        return _spacegrant_swig.hdlc_framer_sptr_start(self)


    def stop(self):
        """stop(hdlc_framer_sptr self) -> bool"""
        return _spacegrant_swig.hdlc_framer_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(hdlc_framer_sptr self, unsigned int which_input) -> uint64_t"""
        return _spacegrant_swig.hdlc_framer_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(hdlc_framer_sptr self, unsigned int which_output) -> uint64_t"""
        return _spacegrant_swig.hdlc_framer_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(hdlc_framer_sptr self) -> int"""
        return _spacegrant_swig.hdlc_framer_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(hdlc_framer_sptr self, int m)"""
        return _spacegrant_swig.hdlc_framer_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(hdlc_framer_sptr self)"""
        return _spacegrant_swig.hdlc_framer_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(hdlc_framer_sptr self) -> bool"""
        return _spacegrant_swig.hdlc_framer_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(hdlc_framer_sptr self, int m)"""
        return _spacegrant_swig.hdlc_framer_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(hdlc_framer_sptr self) -> int"""
        return _spacegrant_swig.hdlc_framer_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(hdlc_framer_sptr self, int i) -> long"""
        return _spacegrant_swig.hdlc_framer_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(hdlc_framer_sptr self, long max_output_buffer)
        set_max_output_buffer(hdlc_framer_sptr self, int port, long max_output_buffer)
        """
        return _spacegrant_swig.hdlc_framer_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(hdlc_framer_sptr self, int i) -> long"""
        return _spacegrant_swig.hdlc_framer_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(hdlc_framer_sptr self, long min_output_buffer)
        set_min_output_buffer(hdlc_framer_sptr self, int port, long min_output_buffer)
        """
        return _spacegrant_swig.hdlc_framer_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(hdlc_framer_sptr self) -> float"""
        return _spacegrant_swig.hdlc_framer_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(hdlc_framer_sptr self) -> float"""
        return _spacegrant_swig.hdlc_framer_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(hdlc_framer_sptr self) -> float"""
        return _spacegrant_swig.hdlc_framer_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(hdlc_framer_sptr self) -> float"""
        return _spacegrant_swig.hdlc_framer_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(hdlc_framer_sptr self) -> float"""
        return _spacegrant_swig.hdlc_framer_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(hdlc_framer_sptr self) -> float"""
        return _spacegrant_swig.hdlc_framer_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(hdlc_framer_sptr self, int which) -> float
        pc_input_buffers_full(hdlc_framer_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.hdlc_framer_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(hdlc_framer_sptr self, int which) -> float
        pc_input_buffers_full_avg(hdlc_framer_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.hdlc_framer_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(hdlc_framer_sptr self, int which) -> float
        pc_input_buffers_full_var(hdlc_framer_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.hdlc_framer_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(hdlc_framer_sptr self, int which) -> float
        pc_output_buffers_full(hdlc_framer_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.hdlc_framer_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(hdlc_framer_sptr self, int which) -> float
        pc_output_buffers_full_avg(hdlc_framer_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.hdlc_framer_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(hdlc_framer_sptr self, int which) -> float
        pc_output_buffers_full_var(hdlc_framer_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.hdlc_framer_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(hdlc_framer_sptr self) -> float"""
        return _spacegrant_swig.hdlc_framer_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(hdlc_framer_sptr self) -> float"""
        return _spacegrant_swig.hdlc_framer_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(hdlc_framer_sptr self) -> float"""
        return _spacegrant_swig.hdlc_framer_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(hdlc_framer_sptr self) -> float"""
        return _spacegrant_swig.hdlc_framer_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(hdlc_framer_sptr self) -> float"""
        return _spacegrant_swig.hdlc_framer_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(hdlc_framer_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _spacegrant_swig.hdlc_framer_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(hdlc_framer_sptr self)"""
        return _spacegrant_swig.hdlc_framer_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(hdlc_framer_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _spacegrant_swig.hdlc_framer_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(hdlc_framer_sptr self) -> int"""
        return _spacegrant_swig.hdlc_framer_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(hdlc_framer_sptr self) -> int"""
        return _spacegrant_swig.hdlc_framer_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(hdlc_framer_sptr self, int priority) -> int"""
        return _spacegrant_swig.hdlc_framer_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(hdlc_framer_sptr self) -> std::string"""
        return _spacegrant_swig.hdlc_framer_sptr_name(self)


    def symbol_name(self):
        """symbol_name(hdlc_framer_sptr self) -> std::string"""
        return _spacegrant_swig.hdlc_framer_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(hdlc_framer_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.hdlc_framer_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(hdlc_framer_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.hdlc_framer_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(hdlc_framer_sptr self) -> long"""
        return _spacegrant_swig.hdlc_framer_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(hdlc_framer_sptr self) -> basic_block_sptr"""
        return _spacegrant_swig.hdlc_framer_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(hdlc_framer_sptr self, int ninputs, int noutputs) -> bool"""
        return _spacegrant_swig.hdlc_framer_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(hdlc_framer_sptr self) -> std::string"""
        return _spacegrant_swig.hdlc_framer_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(hdlc_framer_sptr self, std::string name)"""
        return _spacegrant_swig.hdlc_framer_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(hdlc_framer_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _spacegrant_swig.hdlc_framer_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(hdlc_framer_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.hdlc_framer_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(hdlc_framer_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.hdlc_framer_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(hdlc_framer_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _spacegrant_swig.hdlc_framer_sptr_message_subscribers(self, which_port)

hdlc_framer_sptr_swigregister = _spacegrant_swig.hdlc_framer_sptr_swigregister
hdlc_framer_sptr_swigregister(hdlc_framer_sptr)


hdlc_framer_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
hdlc_framer = hdlc_framer.make;

class ax25_udp_pdu_gen(object):
    """Proxy of C++ gr::spacegrant::ax25_udp_pdu_gen class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def make(host, port, src_addr, dest_addr):
        """make(std::string const & host, int port, std::string const & src_addr, std::string const & dest_addr) -> ax25_udp_pdu_gen_sptr"""
        return _spacegrant_swig.ax25_udp_pdu_gen_make(host, port, src_addr, dest_addr)

    make = staticmethod(make)

    def connect(self, host, port):
        """connect(ax25_udp_pdu_gen self, std::string const & host, int port)"""
        return _spacegrant_swig.ax25_udp_pdu_gen_connect(self, host, port)


    def disconnect(self):
        """disconnect(ax25_udp_pdu_gen self)"""
        return _spacegrant_swig.ax25_udp_pdu_gen_disconnect(self)


    def payload_size(self):
        """payload_size(ax25_udp_pdu_gen self) -> int"""
        return _spacegrant_swig.ax25_udp_pdu_gen_payload_size(self)


    def get_port(self):
        """get_port(ax25_udp_pdu_gen self) -> int"""
        return _spacegrant_swig.ax25_udp_pdu_gen_get_port(self)

    __swig_destroy__ = _spacegrant_swig.delete_ax25_udp_pdu_gen
    __del__ = lambda self: None
ax25_udp_pdu_gen_swigregister = _spacegrant_swig.ax25_udp_pdu_gen_swigregister
ax25_udp_pdu_gen_swigregister(ax25_udp_pdu_gen)

def ax25_udp_pdu_gen_make(host, port, src_addr, dest_addr):
    """ax25_udp_pdu_gen_make(std::string const & host, int port, std::string const & src_addr, std::string const & dest_addr) -> ax25_udp_pdu_gen_sptr"""
    return _spacegrant_swig.ax25_udp_pdu_gen_make(host, port, src_addr, dest_addr)

class ax25_udp_pdu_gen_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::spacegrant::ax25_udp_pdu_gen)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::spacegrant::ax25_udp_pdu_gen)> self) -> ax25_udp_pdu_gen_sptr
        __init__(boost::shared_ptr<(gr::spacegrant::ax25_udp_pdu_gen)> self, ax25_udp_pdu_gen p) -> ax25_udp_pdu_gen_sptr
        """
        this = _spacegrant_swig.new_ax25_udp_pdu_gen_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(ax25_udp_pdu_gen_sptr self) -> ax25_udp_pdu_gen"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr___deref__(self)

    __swig_destroy__ = _spacegrant_swig.delete_ax25_udp_pdu_gen_sptr
    __del__ = lambda self: None

    def make(self, host, port, src_addr, dest_addr):
        """make(ax25_udp_pdu_gen_sptr self, std::string const & host, int port, std::string const & src_addr, std::string const & dest_addr) -> ax25_udp_pdu_gen_sptr"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_make(self, host, port, src_addr, dest_addr)


    def connect(self, host, port):
        """connect(ax25_udp_pdu_gen_sptr self, std::string const & host, int port)"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_connect(self, host, port)


    def disconnect(self):
        """disconnect(ax25_udp_pdu_gen_sptr self)"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_disconnect(self)


    def payload_size(self):
        """payload_size(ax25_udp_pdu_gen_sptr self) -> int"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_payload_size(self)


    def get_port(self):
        """get_port(ax25_udp_pdu_gen_sptr self) -> int"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_get_port(self)


    def history(self):
        """history(ax25_udp_pdu_gen_sptr self) -> unsigned int"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(ax25_udp_pdu_gen_sptr self, int which, int delay)
        declare_sample_delay(ax25_udp_pdu_gen_sptr self, unsigned int delay)
        """
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(ax25_udp_pdu_gen_sptr self, int which) -> unsigned int"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(ax25_udp_pdu_gen_sptr self) -> int"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(ax25_udp_pdu_gen_sptr self) -> double"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_relative_rate(self)


    def start(self):
        """start(ax25_udp_pdu_gen_sptr self) -> bool"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_start(self)


    def stop(self):
        """stop(ax25_udp_pdu_gen_sptr self) -> bool"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(ax25_udp_pdu_gen_sptr self, unsigned int which_input) -> uint64_t"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(ax25_udp_pdu_gen_sptr self, unsigned int which_output) -> uint64_t"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(ax25_udp_pdu_gen_sptr self) -> int"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(ax25_udp_pdu_gen_sptr self, int m)"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ax25_udp_pdu_gen_sptr self)"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ax25_udp_pdu_gen_sptr self) -> bool"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(ax25_udp_pdu_gen_sptr self, int m)"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(ax25_udp_pdu_gen_sptr self) -> int"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(ax25_udp_pdu_gen_sptr self, int i) -> long"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ax25_udp_pdu_gen_sptr self, long max_output_buffer)
        set_max_output_buffer(ax25_udp_pdu_gen_sptr self, int port, long max_output_buffer)
        """
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(ax25_udp_pdu_gen_sptr self, int i) -> long"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ax25_udp_pdu_gen_sptr self, long min_output_buffer)
        set_min_output_buffer(ax25_udp_pdu_gen_sptr self, int port, long min_output_buffer)
        """
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(ax25_udp_pdu_gen_sptr self) -> float"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(ax25_udp_pdu_gen_sptr self) -> float"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ax25_udp_pdu_gen_sptr self) -> float"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(ax25_udp_pdu_gen_sptr self) -> float"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(ax25_udp_pdu_gen_sptr self) -> float"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(ax25_udp_pdu_gen_sptr self) -> float"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ax25_udp_pdu_gen_sptr self, int which) -> float
        pc_input_buffers_full(ax25_udp_pdu_gen_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(ax25_udp_pdu_gen_sptr self, int which) -> float
        pc_input_buffers_full_avg(ax25_udp_pdu_gen_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ax25_udp_pdu_gen_sptr self, int which) -> float
        pc_input_buffers_full_var(ax25_udp_pdu_gen_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ax25_udp_pdu_gen_sptr self, int which) -> float
        pc_output_buffers_full(ax25_udp_pdu_gen_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(ax25_udp_pdu_gen_sptr self, int which) -> float
        pc_output_buffers_full_avg(ax25_udp_pdu_gen_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ax25_udp_pdu_gen_sptr self, int which) -> float
        pc_output_buffers_full_var(ax25_udp_pdu_gen_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(ax25_udp_pdu_gen_sptr self) -> float"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(ax25_udp_pdu_gen_sptr self) -> float"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(ax25_udp_pdu_gen_sptr self) -> float"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(ax25_udp_pdu_gen_sptr self) -> float"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(ax25_udp_pdu_gen_sptr self) -> float"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(ax25_udp_pdu_gen_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(ax25_udp_pdu_gen_sptr self)"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(ax25_udp_pdu_gen_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(ax25_udp_pdu_gen_sptr self) -> int"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(ax25_udp_pdu_gen_sptr self) -> int"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(ax25_udp_pdu_gen_sptr self, int priority) -> int"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(ax25_udp_pdu_gen_sptr self) -> std::string"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_name(self)


    def symbol_name(self):
        """symbol_name(ax25_udp_pdu_gen_sptr self) -> std::string"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(ax25_udp_pdu_gen_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(ax25_udp_pdu_gen_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(ax25_udp_pdu_gen_sptr self) -> long"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(ax25_udp_pdu_gen_sptr self) -> basic_block_sptr"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(ax25_udp_pdu_gen_sptr self, int ninputs, int noutputs) -> bool"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(ax25_udp_pdu_gen_sptr self) -> std::string"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(ax25_udp_pdu_gen_sptr self, std::string name)"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(ax25_udp_pdu_gen_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(ax25_udp_pdu_gen_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(ax25_udp_pdu_gen_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(ax25_udp_pdu_gen_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _spacegrant_swig.ax25_udp_pdu_gen_sptr_message_subscribers(self, which_port)

ax25_udp_pdu_gen_sptr_swigregister = _spacegrant_swig.ax25_udp_pdu_gen_sptr_swigregister
ax25_udp_pdu_gen_sptr_swigregister(ax25_udp_pdu_gen_sptr)


ax25_udp_pdu_gen_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ax25_udp_pdu_gen = ax25_udp_pdu_gen.make;

class ax25_udp_pdu_receiver(object):
    """Proxy of C++ gr::spacegrant::ax25_udp_pdu_receiver class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def make(host, port, sdest_addr):
        """make(std::string const & host, int port, std::string const & sdest_addr) -> ax25_udp_pdu_receiver_sptr"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_make(host, port, sdest_addr)

    make = staticmethod(make)

    def connect(self, host, port):
        """connect(ax25_udp_pdu_receiver self, std::string const & host, int port)"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_connect(self, host, port)


    def disconnect(self):
        """disconnect(ax25_udp_pdu_receiver self)"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_disconnect(self)

    __swig_destroy__ = _spacegrant_swig.delete_ax25_udp_pdu_receiver
    __del__ = lambda self: None
ax25_udp_pdu_receiver_swigregister = _spacegrant_swig.ax25_udp_pdu_receiver_swigregister
ax25_udp_pdu_receiver_swigregister(ax25_udp_pdu_receiver)

def ax25_udp_pdu_receiver_make(host, port, sdest_addr):
    """ax25_udp_pdu_receiver_make(std::string const & host, int port, std::string const & sdest_addr) -> ax25_udp_pdu_receiver_sptr"""
    return _spacegrant_swig.ax25_udp_pdu_receiver_make(host, port, sdest_addr)

class ax25_udp_pdu_receiver_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::spacegrant::ax25_udp_pdu_receiver)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::spacegrant::ax25_udp_pdu_receiver)> self) -> ax25_udp_pdu_receiver_sptr
        __init__(boost::shared_ptr<(gr::spacegrant::ax25_udp_pdu_receiver)> self, ax25_udp_pdu_receiver p) -> ax25_udp_pdu_receiver_sptr
        """
        this = _spacegrant_swig.new_ax25_udp_pdu_receiver_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(ax25_udp_pdu_receiver_sptr self) -> ax25_udp_pdu_receiver"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr___deref__(self)

    __swig_destroy__ = _spacegrant_swig.delete_ax25_udp_pdu_receiver_sptr
    __del__ = lambda self: None

    def make(self, host, port, sdest_addr):
        """make(ax25_udp_pdu_receiver_sptr self, std::string const & host, int port, std::string const & sdest_addr) -> ax25_udp_pdu_receiver_sptr"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_make(self, host, port, sdest_addr)


    def connect(self, host, port):
        """connect(ax25_udp_pdu_receiver_sptr self, std::string const & host, int port)"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_connect(self, host, port)


    def disconnect(self):
        """disconnect(ax25_udp_pdu_receiver_sptr self)"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_disconnect(self)


    def history(self):
        """history(ax25_udp_pdu_receiver_sptr self) -> unsigned int"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(ax25_udp_pdu_receiver_sptr self, int which, int delay)
        declare_sample_delay(ax25_udp_pdu_receiver_sptr self, unsigned int delay)
        """
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(ax25_udp_pdu_receiver_sptr self, int which) -> unsigned int"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(ax25_udp_pdu_receiver_sptr self) -> int"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(ax25_udp_pdu_receiver_sptr self) -> double"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_relative_rate(self)


    def start(self):
        """start(ax25_udp_pdu_receiver_sptr self) -> bool"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_start(self)


    def stop(self):
        """stop(ax25_udp_pdu_receiver_sptr self) -> bool"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(ax25_udp_pdu_receiver_sptr self, unsigned int which_input) -> uint64_t"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(ax25_udp_pdu_receiver_sptr self, unsigned int which_output) -> uint64_t"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(ax25_udp_pdu_receiver_sptr self) -> int"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(ax25_udp_pdu_receiver_sptr self, int m)"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ax25_udp_pdu_receiver_sptr self)"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ax25_udp_pdu_receiver_sptr self) -> bool"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(ax25_udp_pdu_receiver_sptr self, int m)"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(ax25_udp_pdu_receiver_sptr self) -> int"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(ax25_udp_pdu_receiver_sptr self, int i) -> long"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ax25_udp_pdu_receiver_sptr self, long max_output_buffer)
        set_max_output_buffer(ax25_udp_pdu_receiver_sptr self, int port, long max_output_buffer)
        """
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(ax25_udp_pdu_receiver_sptr self, int i) -> long"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ax25_udp_pdu_receiver_sptr self, long min_output_buffer)
        set_min_output_buffer(ax25_udp_pdu_receiver_sptr self, int port, long min_output_buffer)
        """
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(ax25_udp_pdu_receiver_sptr self) -> float"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(ax25_udp_pdu_receiver_sptr self) -> float"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ax25_udp_pdu_receiver_sptr self) -> float"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(ax25_udp_pdu_receiver_sptr self) -> float"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(ax25_udp_pdu_receiver_sptr self) -> float"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(ax25_udp_pdu_receiver_sptr self) -> float"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ax25_udp_pdu_receiver_sptr self, int which) -> float
        pc_input_buffers_full(ax25_udp_pdu_receiver_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(ax25_udp_pdu_receiver_sptr self, int which) -> float
        pc_input_buffers_full_avg(ax25_udp_pdu_receiver_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ax25_udp_pdu_receiver_sptr self, int which) -> float
        pc_input_buffers_full_var(ax25_udp_pdu_receiver_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ax25_udp_pdu_receiver_sptr self, int which) -> float
        pc_output_buffers_full(ax25_udp_pdu_receiver_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(ax25_udp_pdu_receiver_sptr self, int which) -> float
        pc_output_buffers_full_avg(ax25_udp_pdu_receiver_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ax25_udp_pdu_receiver_sptr self, int which) -> float
        pc_output_buffers_full_var(ax25_udp_pdu_receiver_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(ax25_udp_pdu_receiver_sptr self) -> float"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(ax25_udp_pdu_receiver_sptr self) -> float"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(ax25_udp_pdu_receiver_sptr self) -> float"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(ax25_udp_pdu_receiver_sptr self) -> float"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(ax25_udp_pdu_receiver_sptr self) -> float"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(ax25_udp_pdu_receiver_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(ax25_udp_pdu_receiver_sptr self)"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(ax25_udp_pdu_receiver_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(ax25_udp_pdu_receiver_sptr self) -> int"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(ax25_udp_pdu_receiver_sptr self) -> int"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(ax25_udp_pdu_receiver_sptr self, int priority) -> int"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(ax25_udp_pdu_receiver_sptr self) -> std::string"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_name(self)


    def symbol_name(self):
        """symbol_name(ax25_udp_pdu_receiver_sptr self) -> std::string"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(ax25_udp_pdu_receiver_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(ax25_udp_pdu_receiver_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(ax25_udp_pdu_receiver_sptr self) -> long"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(ax25_udp_pdu_receiver_sptr self) -> basic_block_sptr"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(ax25_udp_pdu_receiver_sptr self, int ninputs, int noutputs) -> bool"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(ax25_udp_pdu_receiver_sptr self) -> std::string"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(ax25_udp_pdu_receiver_sptr self, std::string name)"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(ax25_udp_pdu_receiver_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(ax25_udp_pdu_receiver_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(ax25_udp_pdu_receiver_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(ax25_udp_pdu_receiver_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _spacegrant_swig.ax25_udp_pdu_receiver_sptr_message_subscribers(self, which_port)

ax25_udp_pdu_receiver_sptr_swigregister = _spacegrant_swig.ax25_udp_pdu_receiver_sptr_swigregister
ax25_udp_pdu_receiver_sptr_swigregister(ax25_udp_pdu_receiver_sptr)


ax25_udp_pdu_receiver_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ax25_udp_pdu_receiver = ax25_udp_pdu_receiver.make;

class general_burster_2(object):
    """Proxy of C++ gr::spacegrant::general_burster_2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """make() -> general_burster_2_sptr"""
        return _spacegrant_swig.general_burster_2_make()

    make = staticmethod(make)
    __swig_destroy__ = _spacegrant_swig.delete_general_burster_2
    __del__ = lambda self: None
general_burster_2_swigregister = _spacegrant_swig.general_burster_2_swigregister
general_burster_2_swigregister(general_burster_2)

def general_burster_2_make():
    """general_burster_2_make() -> general_burster_2_sptr"""
    return _spacegrant_swig.general_burster_2_make()

class general_burster_2_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::spacegrant::general_burster_2)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::spacegrant::general_burster_2)> self) -> general_burster_2_sptr
        __init__(boost::shared_ptr<(gr::spacegrant::general_burster_2)> self, general_burster_2 p) -> general_burster_2_sptr
        """
        this = _spacegrant_swig.new_general_burster_2_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(general_burster_2_sptr self) -> general_burster_2"""
        return _spacegrant_swig.general_burster_2_sptr___deref__(self)

    __swig_destroy__ = _spacegrant_swig.delete_general_burster_2_sptr
    __del__ = lambda self: None

    def make(self):
        """make(general_burster_2_sptr self) -> general_burster_2_sptr"""
        return _spacegrant_swig.general_burster_2_sptr_make(self)


    def history(self):
        """history(general_burster_2_sptr self) -> unsigned int"""
        return _spacegrant_swig.general_burster_2_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(general_burster_2_sptr self, int which, int delay)
        declare_sample_delay(general_burster_2_sptr self, unsigned int delay)
        """
        return _spacegrant_swig.general_burster_2_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(general_burster_2_sptr self, int which) -> unsigned int"""
        return _spacegrant_swig.general_burster_2_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(general_burster_2_sptr self) -> int"""
        return _spacegrant_swig.general_burster_2_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(general_burster_2_sptr self) -> double"""
        return _spacegrant_swig.general_burster_2_sptr_relative_rate(self)


    def start(self):
        """start(general_burster_2_sptr self) -> bool"""
        return _spacegrant_swig.general_burster_2_sptr_start(self)


    def stop(self):
        """stop(general_burster_2_sptr self) -> bool"""
        return _spacegrant_swig.general_burster_2_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(general_burster_2_sptr self, unsigned int which_input) -> uint64_t"""
        return _spacegrant_swig.general_burster_2_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(general_burster_2_sptr self, unsigned int which_output) -> uint64_t"""
        return _spacegrant_swig.general_burster_2_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(general_burster_2_sptr self) -> int"""
        return _spacegrant_swig.general_burster_2_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(general_burster_2_sptr self, int m)"""
        return _spacegrant_swig.general_burster_2_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(general_burster_2_sptr self)"""
        return _spacegrant_swig.general_burster_2_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(general_burster_2_sptr self) -> bool"""
        return _spacegrant_swig.general_burster_2_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(general_burster_2_sptr self, int m)"""
        return _spacegrant_swig.general_burster_2_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(general_burster_2_sptr self) -> int"""
        return _spacegrant_swig.general_burster_2_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(general_burster_2_sptr self, int i) -> long"""
        return _spacegrant_swig.general_burster_2_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(general_burster_2_sptr self, long max_output_buffer)
        set_max_output_buffer(general_burster_2_sptr self, int port, long max_output_buffer)
        """
        return _spacegrant_swig.general_burster_2_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(general_burster_2_sptr self, int i) -> long"""
        return _spacegrant_swig.general_burster_2_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(general_burster_2_sptr self, long min_output_buffer)
        set_min_output_buffer(general_burster_2_sptr self, int port, long min_output_buffer)
        """
        return _spacegrant_swig.general_burster_2_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(general_burster_2_sptr self) -> float"""
        return _spacegrant_swig.general_burster_2_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(general_burster_2_sptr self) -> float"""
        return _spacegrant_swig.general_burster_2_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(general_burster_2_sptr self) -> float"""
        return _spacegrant_swig.general_burster_2_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(general_burster_2_sptr self) -> float"""
        return _spacegrant_swig.general_burster_2_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(general_burster_2_sptr self) -> float"""
        return _spacegrant_swig.general_burster_2_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(general_burster_2_sptr self) -> float"""
        return _spacegrant_swig.general_burster_2_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(general_burster_2_sptr self, int which) -> float
        pc_input_buffers_full(general_burster_2_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.general_burster_2_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(general_burster_2_sptr self, int which) -> float
        pc_input_buffers_full_avg(general_burster_2_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.general_burster_2_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(general_burster_2_sptr self, int which) -> float
        pc_input_buffers_full_var(general_burster_2_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.general_burster_2_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(general_burster_2_sptr self, int which) -> float
        pc_output_buffers_full(general_burster_2_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.general_burster_2_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(general_burster_2_sptr self, int which) -> float
        pc_output_buffers_full_avg(general_burster_2_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.general_burster_2_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(general_burster_2_sptr self, int which) -> float
        pc_output_buffers_full_var(general_burster_2_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.general_burster_2_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(general_burster_2_sptr self) -> float"""
        return _spacegrant_swig.general_burster_2_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(general_burster_2_sptr self) -> float"""
        return _spacegrant_swig.general_burster_2_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(general_burster_2_sptr self) -> float"""
        return _spacegrant_swig.general_burster_2_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(general_burster_2_sptr self) -> float"""
        return _spacegrant_swig.general_burster_2_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(general_burster_2_sptr self) -> float"""
        return _spacegrant_swig.general_burster_2_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(general_burster_2_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _spacegrant_swig.general_burster_2_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(general_burster_2_sptr self)"""
        return _spacegrant_swig.general_burster_2_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(general_burster_2_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _spacegrant_swig.general_burster_2_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(general_burster_2_sptr self) -> int"""
        return _spacegrant_swig.general_burster_2_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(general_burster_2_sptr self) -> int"""
        return _spacegrant_swig.general_burster_2_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(general_burster_2_sptr self, int priority) -> int"""
        return _spacegrant_swig.general_burster_2_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(general_burster_2_sptr self) -> std::string"""
        return _spacegrant_swig.general_burster_2_sptr_name(self)


    def symbol_name(self):
        """symbol_name(general_burster_2_sptr self) -> std::string"""
        return _spacegrant_swig.general_burster_2_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(general_burster_2_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.general_burster_2_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(general_burster_2_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.general_burster_2_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(general_burster_2_sptr self) -> long"""
        return _spacegrant_swig.general_burster_2_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(general_burster_2_sptr self) -> basic_block_sptr"""
        return _spacegrant_swig.general_burster_2_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(general_burster_2_sptr self, int ninputs, int noutputs) -> bool"""
        return _spacegrant_swig.general_burster_2_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(general_burster_2_sptr self) -> std::string"""
        return _spacegrant_swig.general_burster_2_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(general_burster_2_sptr self, std::string name)"""
        return _spacegrant_swig.general_burster_2_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(general_burster_2_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _spacegrant_swig.general_burster_2_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(general_burster_2_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.general_burster_2_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(general_burster_2_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.general_burster_2_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(general_burster_2_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _spacegrant_swig.general_burster_2_sptr_message_subscribers(self, which_port)

general_burster_2_sptr_swigregister = _spacegrant_swig.general_burster_2_sptr_swigregister
general_burster_2_sptr_swigregister(general_burster_2_sptr)


general_burster_2_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
general_burster_2 = general_burster_2.make;

class binary_sink(object):
    """Proxy of C++ gr::spacegrant::binary_sink class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """make() -> binary_sink_sptr"""
        return _spacegrant_swig.binary_sink_make()

    make = staticmethod(make)
    __swig_destroy__ = _spacegrant_swig.delete_binary_sink
    __del__ = lambda self: None
binary_sink_swigregister = _spacegrant_swig.binary_sink_swigregister
binary_sink_swigregister(binary_sink)

def binary_sink_make():
    """binary_sink_make() -> binary_sink_sptr"""
    return _spacegrant_swig.binary_sink_make()

class binary_sink_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::spacegrant::binary_sink)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::spacegrant::binary_sink)> self) -> binary_sink_sptr
        __init__(boost::shared_ptr<(gr::spacegrant::binary_sink)> self, binary_sink p) -> binary_sink_sptr
        """
        this = _spacegrant_swig.new_binary_sink_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(binary_sink_sptr self) -> binary_sink"""
        return _spacegrant_swig.binary_sink_sptr___deref__(self)

    __swig_destroy__ = _spacegrant_swig.delete_binary_sink_sptr
    __del__ = lambda self: None

    def make(self):
        """make(binary_sink_sptr self) -> binary_sink_sptr"""
        return _spacegrant_swig.binary_sink_sptr_make(self)


    def history(self):
        """history(binary_sink_sptr self) -> unsigned int"""
        return _spacegrant_swig.binary_sink_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(binary_sink_sptr self, int which, int delay)
        declare_sample_delay(binary_sink_sptr self, unsigned int delay)
        """
        return _spacegrant_swig.binary_sink_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(binary_sink_sptr self, int which) -> unsigned int"""
        return _spacegrant_swig.binary_sink_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(binary_sink_sptr self) -> int"""
        return _spacegrant_swig.binary_sink_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(binary_sink_sptr self) -> double"""
        return _spacegrant_swig.binary_sink_sptr_relative_rate(self)


    def start(self):
        """start(binary_sink_sptr self) -> bool"""
        return _spacegrant_swig.binary_sink_sptr_start(self)


    def stop(self):
        """stop(binary_sink_sptr self) -> bool"""
        return _spacegrant_swig.binary_sink_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(binary_sink_sptr self, unsigned int which_input) -> uint64_t"""
        return _spacegrant_swig.binary_sink_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(binary_sink_sptr self, unsigned int which_output) -> uint64_t"""
        return _spacegrant_swig.binary_sink_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(binary_sink_sptr self) -> int"""
        return _spacegrant_swig.binary_sink_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(binary_sink_sptr self, int m)"""
        return _spacegrant_swig.binary_sink_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(binary_sink_sptr self)"""
        return _spacegrant_swig.binary_sink_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(binary_sink_sptr self) -> bool"""
        return _spacegrant_swig.binary_sink_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(binary_sink_sptr self, int m)"""
        return _spacegrant_swig.binary_sink_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(binary_sink_sptr self) -> int"""
        return _spacegrant_swig.binary_sink_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(binary_sink_sptr self, int i) -> long"""
        return _spacegrant_swig.binary_sink_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(binary_sink_sptr self, long max_output_buffer)
        set_max_output_buffer(binary_sink_sptr self, int port, long max_output_buffer)
        """
        return _spacegrant_swig.binary_sink_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(binary_sink_sptr self, int i) -> long"""
        return _spacegrant_swig.binary_sink_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(binary_sink_sptr self, long min_output_buffer)
        set_min_output_buffer(binary_sink_sptr self, int port, long min_output_buffer)
        """
        return _spacegrant_swig.binary_sink_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(binary_sink_sptr self) -> float"""
        return _spacegrant_swig.binary_sink_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(binary_sink_sptr self) -> float"""
        return _spacegrant_swig.binary_sink_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(binary_sink_sptr self) -> float"""
        return _spacegrant_swig.binary_sink_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(binary_sink_sptr self) -> float"""
        return _spacegrant_swig.binary_sink_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(binary_sink_sptr self) -> float"""
        return _spacegrant_swig.binary_sink_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(binary_sink_sptr self) -> float"""
        return _spacegrant_swig.binary_sink_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(binary_sink_sptr self, int which) -> float
        pc_input_buffers_full(binary_sink_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.binary_sink_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(binary_sink_sptr self, int which) -> float
        pc_input_buffers_full_avg(binary_sink_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.binary_sink_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(binary_sink_sptr self, int which) -> float
        pc_input_buffers_full_var(binary_sink_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.binary_sink_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(binary_sink_sptr self, int which) -> float
        pc_output_buffers_full(binary_sink_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.binary_sink_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(binary_sink_sptr self, int which) -> float
        pc_output_buffers_full_avg(binary_sink_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.binary_sink_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(binary_sink_sptr self, int which) -> float
        pc_output_buffers_full_var(binary_sink_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.binary_sink_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(binary_sink_sptr self) -> float"""
        return _spacegrant_swig.binary_sink_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(binary_sink_sptr self) -> float"""
        return _spacegrant_swig.binary_sink_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(binary_sink_sptr self) -> float"""
        return _spacegrant_swig.binary_sink_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(binary_sink_sptr self) -> float"""
        return _spacegrant_swig.binary_sink_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(binary_sink_sptr self) -> float"""
        return _spacegrant_swig.binary_sink_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(binary_sink_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _spacegrant_swig.binary_sink_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(binary_sink_sptr self)"""
        return _spacegrant_swig.binary_sink_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(binary_sink_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _spacegrant_swig.binary_sink_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(binary_sink_sptr self) -> int"""
        return _spacegrant_swig.binary_sink_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(binary_sink_sptr self) -> int"""
        return _spacegrant_swig.binary_sink_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(binary_sink_sptr self, int priority) -> int"""
        return _spacegrant_swig.binary_sink_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(binary_sink_sptr self) -> std::string"""
        return _spacegrant_swig.binary_sink_sptr_name(self)


    def symbol_name(self):
        """symbol_name(binary_sink_sptr self) -> std::string"""
        return _spacegrant_swig.binary_sink_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(binary_sink_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.binary_sink_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(binary_sink_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.binary_sink_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(binary_sink_sptr self) -> long"""
        return _spacegrant_swig.binary_sink_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(binary_sink_sptr self) -> basic_block_sptr"""
        return _spacegrant_swig.binary_sink_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(binary_sink_sptr self, int ninputs, int noutputs) -> bool"""
        return _spacegrant_swig.binary_sink_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(binary_sink_sptr self) -> std::string"""
        return _spacegrant_swig.binary_sink_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(binary_sink_sptr self, std::string name)"""
        return _spacegrant_swig.binary_sink_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(binary_sink_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _spacegrant_swig.binary_sink_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(binary_sink_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.binary_sink_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(binary_sink_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.binary_sink_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(binary_sink_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _spacegrant_swig.binary_sink_sptr_message_subscribers(self, which_port)

binary_sink_sptr_swigregister = _spacegrant_swig.binary_sink_sptr_swigregister
binary_sink_sptr_swigregister(binary_sink_sptr)


binary_sink_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
binary_sink = binary_sink.make;

class NRZI(object):
    """Proxy of C++ gr::spacegrant::NRZI class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """make() -> NRZI_sptr"""
        return _spacegrant_swig.NRZI_make()

    make = staticmethod(make)
    __swig_destroy__ = _spacegrant_swig.delete_NRZI
    __del__ = lambda self: None
NRZI_swigregister = _spacegrant_swig.NRZI_swigregister
NRZI_swigregister(NRZI)

def NRZI_make():
    """NRZI_make() -> NRZI_sptr"""
    return _spacegrant_swig.NRZI_make()

class NRZI_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::spacegrant::NRZI)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::spacegrant::NRZI)> self) -> NRZI_sptr
        __init__(boost::shared_ptr<(gr::spacegrant::NRZI)> self, NRZI p) -> NRZI_sptr
        """
        this = _spacegrant_swig.new_NRZI_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(NRZI_sptr self) -> NRZI"""
        return _spacegrant_swig.NRZI_sptr___deref__(self)

    __swig_destroy__ = _spacegrant_swig.delete_NRZI_sptr
    __del__ = lambda self: None

    def make(self):
        """make(NRZI_sptr self) -> NRZI_sptr"""
        return _spacegrant_swig.NRZI_sptr_make(self)


    def history(self):
        """history(NRZI_sptr self) -> unsigned int"""
        return _spacegrant_swig.NRZI_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(NRZI_sptr self, int which, int delay)
        declare_sample_delay(NRZI_sptr self, unsigned int delay)
        """
        return _spacegrant_swig.NRZI_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(NRZI_sptr self, int which) -> unsigned int"""
        return _spacegrant_swig.NRZI_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(NRZI_sptr self) -> int"""
        return _spacegrant_swig.NRZI_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(NRZI_sptr self) -> double"""
        return _spacegrant_swig.NRZI_sptr_relative_rate(self)


    def start(self):
        """start(NRZI_sptr self) -> bool"""
        return _spacegrant_swig.NRZI_sptr_start(self)


    def stop(self):
        """stop(NRZI_sptr self) -> bool"""
        return _spacegrant_swig.NRZI_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(NRZI_sptr self, unsigned int which_input) -> uint64_t"""
        return _spacegrant_swig.NRZI_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(NRZI_sptr self, unsigned int which_output) -> uint64_t"""
        return _spacegrant_swig.NRZI_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(NRZI_sptr self) -> int"""
        return _spacegrant_swig.NRZI_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(NRZI_sptr self, int m)"""
        return _spacegrant_swig.NRZI_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(NRZI_sptr self)"""
        return _spacegrant_swig.NRZI_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(NRZI_sptr self) -> bool"""
        return _spacegrant_swig.NRZI_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(NRZI_sptr self, int m)"""
        return _spacegrant_swig.NRZI_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(NRZI_sptr self) -> int"""
        return _spacegrant_swig.NRZI_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(NRZI_sptr self, int i) -> long"""
        return _spacegrant_swig.NRZI_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(NRZI_sptr self, long max_output_buffer)
        set_max_output_buffer(NRZI_sptr self, int port, long max_output_buffer)
        """
        return _spacegrant_swig.NRZI_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(NRZI_sptr self, int i) -> long"""
        return _spacegrant_swig.NRZI_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(NRZI_sptr self, long min_output_buffer)
        set_min_output_buffer(NRZI_sptr self, int port, long min_output_buffer)
        """
        return _spacegrant_swig.NRZI_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(NRZI_sptr self) -> float"""
        return _spacegrant_swig.NRZI_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(NRZI_sptr self) -> float"""
        return _spacegrant_swig.NRZI_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(NRZI_sptr self) -> float"""
        return _spacegrant_swig.NRZI_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(NRZI_sptr self) -> float"""
        return _spacegrant_swig.NRZI_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(NRZI_sptr self) -> float"""
        return _spacegrant_swig.NRZI_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(NRZI_sptr self) -> float"""
        return _spacegrant_swig.NRZI_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(NRZI_sptr self, int which) -> float
        pc_input_buffers_full(NRZI_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.NRZI_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(NRZI_sptr self, int which) -> float
        pc_input_buffers_full_avg(NRZI_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.NRZI_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(NRZI_sptr self, int which) -> float
        pc_input_buffers_full_var(NRZI_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.NRZI_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(NRZI_sptr self, int which) -> float
        pc_output_buffers_full(NRZI_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.NRZI_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(NRZI_sptr self, int which) -> float
        pc_output_buffers_full_avg(NRZI_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.NRZI_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(NRZI_sptr self, int which) -> float
        pc_output_buffers_full_var(NRZI_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.NRZI_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(NRZI_sptr self) -> float"""
        return _spacegrant_swig.NRZI_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(NRZI_sptr self) -> float"""
        return _spacegrant_swig.NRZI_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(NRZI_sptr self) -> float"""
        return _spacegrant_swig.NRZI_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(NRZI_sptr self) -> float"""
        return _spacegrant_swig.NRZI_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(NRZI_sptr self) -> float"""
        return _spacegrant_swig.NRZI_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(NRZI_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _spacegrant_swig.NRZI_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(NRZI_sptr self)"""
        return _spacegrant_swig.NRZI_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(NRZI_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _spacegrant_swig.NRZI_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(NRZI_sptr self) -> int"""
        return _spacegrant_swig.NRZI_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(NRZI_sptr self) -> int"""
        return _spacegrant_swig.NRZI_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(NRZI_sptr self, int priority) -> int"""
        return _spacegrant_swig.NRZI_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(NRZI_sptr self) -> std::string"""
        return _spacegrant_swig.NRZI_sptr_name(self)


    def symbol_name(self):
        """symbol_name(NRZI_sptr self) -> std::string"""
        return _spacegrant_swig.NRZI_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(NRZI_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.NRZI_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(NRZI_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.NRZI_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(NRZI_sptr self) -> long"""
        return _spacegrant_swig.NRZI_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(NRZI_sptr self) -> basic_block_sptr"""
        return _spacegrant_swig.NRZI_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(NRZI_sptr self, int ninputs, int noutputs) -> bool"""
        return _spacegrant_swig.NRZI_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(NRZI_sptr self) -> std::string"""
        return _spacegrant_swig.NRZI_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(NRZI_sptr self, std::string name)"""
        return _spacegrant_swig.NRZI_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(NRZI_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _spacegrant_swig.NRZI_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(NRZI_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.NRZI_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(NRZI_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.NRZI_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(NRZI_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _spacegrant_swig.NRZI_sptr_message_subscribers(self, which_port)

NRZI_sptr_swigregister = _spacegrant_swig.NRZI_sptr_swigregister
NRZI_sptr_swigregister(NRZI_sptr)


NRZI_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
NRZI = NRZI.make;

class DeNRZI(object):
    """Proxy of C++ gr::spacegrant::DeNRZI class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """make() -> DeNRZI_sptr"""
        return _spacegrant_swig.DeNRZI_make()

    make = staticmethod(make)
    __swig_destroy__ = _spacegrant_swig.delete_DeNRZI
    __del__ = lambda self: None
DeNRZI_swigregister = _spacegrant_swig.DeNRZI_swigregister
DeNRZI_swigregister(DeNRZI)

def DeNRZI_make():
    """DeNRZI_make() -> DeNRZI_sptr"""
    return _spacegrant_swig.DeNRZI_make()

class DeNRZI_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::spacegrant::DeNRZI)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::spacegrant::DeNRZI)> self) -> DeNRZI_sptr
        __init__(boost::shared_ptr<(gr::spacegrant::DeNRZI)> self, DeNRZI p) -> DeNRZI_sptr
        """
        this = _spacegrant_swig.new_DeNRZI_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(DeNRZI_sptr self) -> DeNRZI"""
        return _spacegrant_swig.DeNRZI_sptr___deref__(self)

    __swig_destroy__ = _spacegrant_swig.delete_DeNRZI_sptr
    __del__ = lambda self: None

    def make(self):
        """make(DeNRZI_sptr self) -> DeNRZI_sptr"""
        return _spacegrant_swig.DeNRZI_sptr_make(self)


    def history(self):
        """history(DeNRZI_sptr self) -> unsigned int"""
        return _spacegrant_swig.DeNRZI_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(DeNRZI_sptr self, int which, int delay)
        declare_sample_delay(DeNRZI_sptr self, unsigned int delay)
        """
        return _spacegrant_swig.DeNRZI_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(DeNRZI_sptr self, int which) -> unsigned int"""
        return _spacegrant_swig.DeNRZI_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(DeNRZI_sptr self) -> int"""
        return _spacegrant_swig.DeNRZI_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(DeNRZI_sptr self) -> double"""
        return _spacegrant_swig.DeNRZI_sptr_relative_rate(self)


    def start(self):
        """start(DeNRZI_sptr self) -> bool"""
        return _spacegrant_swig.DeNRZI_sptr_start(self)


    def stop(self):
        """stop(DeNRZI_sptr self) -> bool"""
        return _spacegrant_swig.DeNRZI_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(DeNRZI_sptr self, unsigned int which_input) -> uint64_t"""
        return _spacegrant_swig.DeNRZI_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(DeNRZI_sptr self, unsigned int which_output) -> uint64_t"""
        return _spacegrant_swig.DeNRZI_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(DeNRZI_sptr self) -> int"""
        return _spacegrant_swig.DeNRZI_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(DeNRZI_sptr self, int m)"""
        return _spacegrant_swig.DeNRZI_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(DeNRZI_sptr self)"""
        return _spacegrant_swig.DeNRZI_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(DeNRZI_sptr self) -> bool"""
        return _spacegrant_swig.DeNRZI_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(DeNRZI_sptr self, int m)"""
        return _spacegrant_swig.DeNRZI_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(DeNRZI_sptr self) -> int"""
        return _spacegrant_swig.DeNRZI_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(DeNRZI_sptr self, int i) -> long"""
        return _spacegrant_swig.DeNRZI_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(DeNRZI_sptr self, long max_output_buffer)
        set_max_output_buffer(DeNRZI_sptr self, int port, long max_output_buffer)
        """
        return _spacegrant_swig.DeNRZI_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(DeNRZI_sptr self, int i) -> long"""
        return _spacegrant_swig.DeNRZI_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(DeNRZI_sptr self, long min_output_buffer)
        set_min_output_buffer(DeNRZI_sptr self, int port, long min_output_buffer)
        """
        return _spacegrant_swig.DeNRZI_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(DeNRZI_sptr self) -> float"""
        return _spacegrant_swig.DeNRZI_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(DeNRZI_sptr self) -> float"""
        return _spacegrant_swig.DeNRZI_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(DeNRZI_sptr self) -> float"""
        return _spacegrant_swig.DeNRZI_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(DeNRZI_sptr self) -> float"""
        return _spacegrant_swig.DeNRZI_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(DeNRZI_sptr self) -> float"""
        return _spacegrant_swig.DeNRZI_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(DeNRZI_sptr self) -> float"""
        return _spacegrant_swig.DeNRZI_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(DeNRZI_sptr self, int which) -> float
        pc_input_buffers_full(DeNRZI_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.DeNRZI_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(DeNRZI_sptr self, int which) -> float
        pc_input_buffers_full_avg(DeNRZI_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.DeNRZI_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(DeNRZI_sptr self, int which) -> float
        pc_input_buffers_full_var(DeNRZI_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.DeNRZI_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(DeNRZI_sptr self, int which) -> float
        pc_output_buffers_full(DeNRZI_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.DeNRZI_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(DeNRZI_sptr self, int which) -> float
        pc_output_buffers_full_avg(DeNRZI_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.DeNRZI_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(DeNRZI_sptr self, int which) -> float
        pc_output_buffers_full_var(DeNRZI_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.DeNRZI_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(DeNRZI_sptr self) -> float"""
        return _spacegrant_swig.DeNRZI_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(DeNRZI_sptr self) -> float"""
        return _spacegrant_swig.DeNRZI_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(DeNRZI_sptr self) -> float"""
        return _spacegrant_swig.DeNRZI_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(DeNRZI_sptr self) -> float"""
        return _spacegrant_swig.DeNRZI_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(DeNRZI_sptr self) -> float"""
        return _spacegrant_swig.DeNRZI_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(DeNRZI_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _spacegrant_swig.DeNRZI_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(DeNRZI_sptr self)"""
        return _spacegrant_swig.DeNRZI_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(DeNRZI_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _spacegrant_swig.DeNRZI_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(DeNRZI_sptr self) -> int"""
        return _spacegrant_swig.DeNRZI_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(DeNRZI_sptr self) -> int"""
        return _spacegrant_swig.DeNRZI_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(DeNRZI_sptr self, int priority) -> int"""
        return _spacegrant_swig.DeNRZI_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(DeNRZI_sptr self) -> std::string"""
        return _spacegrant_swig.DeNRZI_sptr_name(self)


    def symbol_name(self):
        """symbol_name(DeNRZI_sptr self) -> std::string"""
        return _spacegrant_swig.DeNRZI_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(DeNRZI_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.DeNRZI_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(DeNRZI_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.DeNRZI_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(DeNRZI_sptr self) -> long"""
        return _spacegrant_swig.DeNRZI_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(DeNRZI_sptr self) -> basic_block_sptr"""
        return _spacegrant_swig.DeNRZI_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(DeNRZI_sptr self, int ninputs, int noutputs) -> bool"""
        return _spacegrant_swig.DeNRZI_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(DeNRZI_sptr self) -> std::string"""
        return _spacegrant_swig.DeNRZI_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(DeNRZI_sptr self, std::string name)"""
        return _spacegrant_swig.DeNRZI_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(DeNRZI_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _spacegrant_swig.DeNRZI_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(DeNRZI_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.DeNRZI_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(DeNRZI_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.DeNRZI_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(DeNRZI_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _spacegrant_swig.DeNRZI_sptr_message_subscribers(self, which_port)

DeNRZI_sptr_swigregister = _spacegrant_swig.DeNRZI_sptr_swigregister
DeNRZI_sptr_swigregister(DeNRZI_sptr)


DeNRZI_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
DeNRZI = DeNRZI.make;

class invert_bit(object):
    """Proxy of C++ gr::spacegrant::invert_bit class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """make() -> invert_bit_sptr"""
        return _spacegrant_swig.invert_bit_make()

    make = staticmethod(make)
    __swig_destroy__ = _spacegrant_swig.delete_invert_bit
    __del__ = lambda self: None
invert_bit_swigregister = _spacegrant_swig.invert_bit_swigregister
invert_bit_swigregister(invert_bit)

def invert_bit_make():
    """invert_bit_make() -> invert_bit_sptr"""
    return _spacegrant_swig.invert_bit_make()

class invert_bit_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::spacegrant::invert_bit)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::spacegrant::invert_bit)> self) -> invert_bit_sptr
        __init__(boost::shared_ptr<(gr::spacegrant::invert_bit)> self, invert_bit p) -> invert_bit_sptr
        """
        this = _spacegrant_swig.new_invert_bit_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(invert_bit_sptr self) -> invert_bit"""
        return _spacegrant_swig.invert_bit_sptr___deref__(self)

    __swig_destroy__ = _spacegrant_swig.delete_invert_bit_sptr
    __del__ = lambda self: None

    def make(self):
        """make(invert_bit_sptr self) -> invert_bit_sptr"""
        return _spacegrant_swig.invert_bit_sptr_make(self)


    def history(self):
        """history(invert_bit_sptr self) -> unsigned int"""
        return _spacegrant_swig.invert_bit_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(invert_bit_sptr self, int which, int delay)
        declare_sample_delay(invert_bit_sptr self, unsigned int delay)
        """
        return _spacegrant_swig.invert_bit_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(invert_bit_sptr self, int which) -> unsigned int"""
        return _spacegrant_swig.invert_bit_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(invert_bit_sptr self) -> int"""
        return _spacegrant_swig.invert_bit_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(invert_bit_sptr self) -> double"""
        return _spacegrant_swig.invert_bit_sptr_relative_rate(self)


    def start(self):
        """start(invert_bit_sptr self) -> bool"""
        return _spacegrant_swig.invert_bit_sptr_start(self)


    def stop(self):
        """stop(invert_bit_sptr self) -> bool"""
        return _spacegrant_swig.invert_bit_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(invert_bit_sptr self, unsigned int which_input) -> uint64_t"""
        return _spacegrant_swig.invert_bit_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(invert_bit_sptr self, unsigned int which_output) -> uint64_t"""
        return _spacegrant_swig.invert_bit_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(invert_bit_sptr self) -> int"""
        return _spacegrant_swig.invert_bit_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(invert_bit_sptr self, int m)"""
        return _spacegrant_swig.invert_bit_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(invert_bit_sptr self)"""
        return _spacegrant_swig.invert_bit_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(invert_bit_sptr self) -> bool"""
        return _spacegrant_swig.invert_bit_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(invert_bit_sptr self, int m)"""
        return _spacegrant_swig.invert_bit_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(invert_bit_sptr self) -> int"""
        return _spacegrant_swig.invert_bit_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(invert_bit_sptr self, int i) -> long"""
        return _spacegrant_swig.invert_bit_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(invert_bit_sptr self, long max_output_buffer)
        set_max_output_buffer(invert_bit_sptr self, int port, long max_output_buffer)
        """
        return _spacegrant_swig.invert_bit_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(invert_bit_sptr self, int i) -> long"""
        return _spacegrant_swig.invert_bit_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(invert_bit_sptr self, long min_output_buffer)
        set_min_output_buffer(invert_bit_sptr self, int port, long min_output_buffer)
        """
        return _spacegrant_swig.invert_bit_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(invert_bit_sptr self) -> float"""
        return _spacegrant_swig.invert_bit_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(invert_bit_sptr self) -> float"""
        return _spacegrant_swig.invert_bit_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(invert_bit_sptr self) -> float"""
        return _spacegrant_swig.invert_bit_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(invert_bit_sptr self) -> float"""
        return _spacegrant_swig.invert_bit_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(invert_bit_sptr self) -> float"""
        return _spacegrant_swig.invert_bit_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(invert_bit_sptr self) -> float"""
        return _spacegrant_swig.invert_bit_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(invert_bit_sptr self, int which) -> float
        pc_input_buffers_full(invert_bit_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.invert_bit_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(invert_bit_sptr self, int which) -> float
        pc_input_buffers_full_avg(invert_bit_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.invert_bit_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(invert_bit_sptr self, int which) -> float
        pc_input_buffers_full_var(invert_bit_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.invert_bit_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(invert_bit_sptr self, int which) -> float
        pc_output_buffers_full(invert_bit_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.invert_bit_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(invert_bit_sptr self, int which) -> float
        pc_output_buffers_full_avg(invert_bit_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.invert_bit_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(invert_bit_sptr self, int which) -> float
        pc_output_buffers_full_var(invert_bit_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.invert_bit_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(invert_bit_sptr self) -> float"""
        return _spacegrant_swig.invert_bit_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(invert_bit_sptr self) -> float"""
        return _spacegrant_swig.invert_bit_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(invert_bit_sptr self) -> float"""
        return _spacegrant_swig.invert_bit_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(invert_bit_sptr self) -> float"""
        return _spacegrant_swig.invert_bit_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(invert_bit_sptr self) -> float"""
        return _spacegrant_swig.invert_bit_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(invert_bit_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _spacegrant_swig.invert_bit_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(invert_bit_sptr self)"""
        return _spacegrant_swig.invert_bit_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(invert_bit_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _spacegrant_swig.invert_bit_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(invert_bit_sptr self) -> int"""
        return _spacegrant_swig.invert_bit_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(invert_bit_sptr self) -> int"""
        return _spacegrant_swig.invert_bit_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(invert_bit_sptr self, int priority) -> int"""
        return _spacegrant_swig.invert_bit_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(invert_bit_sptr self) -> std::string"""
        return _spacegrant_swig.invert_bit_sptr_name(self)


    def symbol_name(self):
        """symbol_name(invert_bit_sptr self) -> std::string"""
        return _spacegrant_swig.invert_bit_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(invert_bit_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.invert_bit_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(invert_bit_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.invert_bit_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(invert_bit_sptr self) -> long"""
        return _spacegrant_swig.invert_bit_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(invert_bit_sptr self) -> basic_block_sptr"""
        return _spacegrant_swig.invert_bit_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(invert_bit_sptr self, int ninputs, int noutputs) -> bool"""
        return _spacegrant_swig.invert_bit_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(invert_bit_sptr self) -> std::string"""
        return _spacegrant_swig.invert_bit_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(invert_bit_sptr self, std::string name)"""
        return _spacegrant_swig.invert_bit_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(invert_bit_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _spacegrant_swig.invert_bit_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(invert_bit_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.invert_bit_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(invert_bit_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.invert_bit_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(invert_bit_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _spacegrant_swig.invert_bit_sptr_message_subscribers(self, which_port)

invert_bit_sptr_swigregister = _spacegrant_swig.invert_bit_sptr_swigregister
invert_bit_sptr_swigregister(invert_bit_sptr)


invert_bit_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
invert_bit = invert_bit.make;

class hdlc_deframer(object):
    """Proxy of C++ gr::spacegrant::hdlc_deframer class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(validate_crc, length_min, length_max):
        """make(bool validate_crc, int length_min, int length_max) -> hdlc_deframer_sptr"""
        return _spacegrant_swig.hdlc_deframer_make(validate_crc, length_min, length_max)

    make = staticmethod(make)
    __swig_destroy__ = _spacegrant_swig.delete_hdlc_deframer
    __del__ = lambda self: None
hdlc_deframer_swigregister = _spacegrant_swig.hdlc_deframer_swigregister
hdlc_deframer_swigregister(hdlc_deframer)

def hdlc_deframer_make(validate_crc, length_min, length_max):
    """hdlc_deframer_make(bool validate_crc, int length_min, int length_max) -> hdlc_deframer_sptr"""
    return _spacegrant_swig.hdlc_deframer_make(validate_crc, length_min, length_max)

class hdlc_deframer_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::spacegrant::hdlc_deframer)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::spacegrant::hdlc_deframer)> self) -> hdlc_deframer_sptr
        __init__(boost::shared_ptr<(gr::spacegrant::hdlc_deframer)> self, hdlc_deframer p) -> hdlc_deframer_sptr
        """
        this = _spacegrant_swig.new_hdlc_deframer_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(hdlc_deframer_sptr self) -> hdlc_deframer"""
        return _spacegrant_swig.hdlc_deframer_sptr___deref__(self)

    __swig_destroy__ = _spacegrant_swig.delete_hdlc_deframer_sptr
    __del__ = lambda self: None

    def make(self, validate_crc, length_min, length_max):
        """make(hdlc_deframer_sptr self, bool validate_crc, int length_min, int length_max) -> hdlc_deframer_sptr"""
        return _spacegrant_swig.hdlc_deframer_sptr_make(self, validate_crc, length_min, length_max)


    def history(self):
        """history(hdlc_deframer_sptr self) -> unsigned int"""
        return _spacegrant_swig.hdlc_deframer_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(hdlc_deframer_sptr self, int which, int delay)
        declare_sample_delay(hdlc_deframer_sptr self, unsigned int delay)
        """
        return _spacegrant_swig.hdlc_deframer_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(hdlc_deframer_sptr self, int which) -> unsigned int"""
        return _spacegrant_swig.hdlc_deframer_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(hdlc_deframer_sptr self) -> int"""
        return _spacegrant_swig.hdlc_deframer_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(hdlc_deframer_sptr self) -> double"""
        return _spacegrant_swig.hdlc_deframer_sptr_relative_rate(self)


    def start(self):
        """start(hdlc_deframer_sptr self) -> bool"""
        return _spacegrant_swig.hdlc_deframer_sptr_start(self)


    def stop(self):
        """stop(hdlc_deframer_sptr self) -> bool"""
        return _spacegrant_swig.hdlc_deframer_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(hdlc_deframer_sptr self, unsigned int which_input) -> uint64_t"""
        return _spacegrant_swig.hdlc_deframer_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(hdlc_deframer_sptr self, unsigned int which_output) -> uint64_t"""
        return _spacegrant_swig.hdlc_deframer_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(hdlc_deframer_sptr self) -> int"""
        return _spacegrant_swig.hdlc_deframer_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(hdlc_deframer_sptr self, int m)"""
        return _spacegrant_swig.hdlc_deframer_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(hdlc_deframer_sptr self)"""
        return _spacegrant_swig.hdlc_deframer_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(hdlc_deframer_sptr self) -> bool"""
        return _spacegrant_swig.hdlc_deframer_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(hdlc_deframer_sptr self, int m)"""
        return _spacegrant_swig.hdlc_deframer_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(hdlc_deframer_sptr self) -> int"""
        return _spacegrant_swig.hdlc_deframer_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(hdlc_deframer_sptr self, int i) -> long"""
        return _spacegrant_swig.hdlc_deframer_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(hdlc_deframer_sptr self, long max_output_buffer)
        set_max_output_buffer(hdlc_deframer_sptr self, int port, long max_output_buffer)
        """
        return _spacegrant_swig.hdlc_deframer_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(hdlc_deframer_sptr self, int i) -> long"""
        return _spacegrant_swig.hdlc_deframer_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(hdlc_deframer_sptr self, long min_output_buffer)
        set_min_output_buffer(hdlc_deframer_sptr self, int port, long min_output_buffer)
        """
        return _spacegrant_swig.hdlc_deframer_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(hdlc_deframer_sptr self) -> float"""
        return _spacegrant_swig.hdlc_deframer_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(hdlc_deframer_sptr self) -> float"""
        return _spacegrant_swig.hdlc_deframer_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(hdlc_deframer_sptr self) -> float"""
        return _spacegrant_swig.hdlc_deframer_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(hdlc_deframer_sptr self) -> float"""
        return _spacegrant_swig.hdlc_deframer_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(hdlc_deframer_sptr self) -> float"""
        return _spacegrant_swig.hdlc_deframer_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(hdlc_deframer_sptr self) -> float"""
        return _spacegrant_swig.hdlc_deframer_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(hdlc_deframer_sptr self, int which) -> float
        pc_input_buffers_full(hdlc_deframer_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.hdlc_deframer_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(hdlc_deframer_sptr self, int which) -> float
        pc_input_buffers_full_avg(hdlc_deframer_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.hdlc_deframer_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(hdlc_deframer_sptr self, int which) -> float
        pc_input_buffers_full_var(hdlc_deframer_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.hdlc_deframer_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(hdlc_deframer_sptr self, int which) -> float
        pc_output_buffers_full(hdlc_deframer_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.hdlc_deframer_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(hdlc_deframer_sptr self, int which) -> float
        pc_output_buffers_full_avg(hdlc_deframer_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.hdlc_deframer_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(hdlc_deframer_sptr self, int which) -> float
        pc_output_buffers_full_var(hdlc_deframer_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.hdlc_deframer_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(hdlc_deframer_sptr self) -> float"""
        return _spacegrant_swig.hdlc_deframer_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(hdlc_deframer_sptr self) -> float"""
        return _spacegrant_swig.hdlc_deframer_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(hdlc_deframer_sptr self) -> float"""
        return _spacegrant_swig.hdlc_deframer_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(hdlc_deframer_sptr self) -> float"""
        return _spacegrant_swig.hdlc_deframer_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(hdlc_deframer_sptr self) -> float"""
        return _spacegrant_swig.hdlc_deframer_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(hdlc_deframer_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _spacegrant_swig.hdlc_deframer_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(hdlc_deframer_sptr self)"""
        return _spacegrant_swig.hdlc_deframer_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(hdlc_deframer_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _spacegrant_swig.hdlc_deframer_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(hdlc_deframer_sptr self) -> int"""
        return _spacegrant_swig.hdlc_deframer_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(hdlc_deframer_sptr self) -> int"""
        return _spacegrant_swig.hdlc_deframer_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(hdlc_deframer_sptr self, int priority) -> int"""
        return _spacegrant_swig.hdlc_deframer_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(hdlc_deframer_sptr self) -> std::string"""
        return _spacegrant_swig.hdlc_deframer_sptr_name(self)


    def symbol_name(self):
        """symbol_name(hdlc_deframer_sptr self) -> std::string"""
        return _spacegrant_swig.hdlc_deframer_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(hdlc_deframer_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.hdlc_deframer_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(hdlc_deframer_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.hdlc_deframer_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(hdlc_deframer_sptr self) -> long"""
        return _spacegrant_swig.hdlc_deframer_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(hdlc_deframer_sptr self) -> basic_block_sptr"""
        return _spacegrant_swig.hdlc_deframer_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(hdlc_deframer_sptr self, int ninputs, int noutputs) -> bool"""
        return _spacegrant_swig.hdlc_deframer_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(hdlc_deframer_sptr self) -> std::string"""
        return _spacegrant_swig.hdlc_deframer_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(hdlc_deframer_sptr self, std::string name)"""
        return _spacegrant_swig.hdlc_deframer_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(hdlc_deframer_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _spacegrant_swig.hdlc_deframer_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(hdlc_deframer_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.hdlc_deframer_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(hdlc_deframer_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.hdlc_deframer_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(hdlc_deframer_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _spacegrant_swig.hdlc_deframer_sptr_message_subscribers(self, which_port)

hdlc_deframer_sptr_swigregister = _spacegrant_swig.hdlc_deframer_sptr_swigregister
hdlc_deframer_sptr_swigregister(hdlc_deframer_sptr)


hdlc_deframer_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
hdlc_deframer = hdlc_deframer.make;

class message_debug(object):
    """Proxy of C++ gr::spacegrant::message_debug class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """make() -> message_debug_sptr"""
        return _spacegrant_swig.message_debug_make()

    make = staticmethod(make)
    __swig_destroy__ = _spacegrant_swig.delete_message_debug
    __del__ = lambda self: None
message_debug_swigregister = _spacegrant_swig.message_debug_swigregister
message_debug_swigregister(message_debug)

def message_debug_make():
    """message_debug_make() -> message_debug_sptr"""
    return _spacegrant_swig.message_debug_make()

class message_debug_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::spacegrant::message_debug)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::spacegrant::message_debug)> self) -> message_debug_sptr
        __init__(boost::shared_ptr<(gr::spacegrant::message_debug)> self, message_debug p) -> message_debug_sptr
        """
        this = _spacegrant_swig.new_message_debug_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(message_debug_sptr self) -> message_debug"""
        return _spacegrant_swig.message_debug_sptr___deref__(self)

    __swig_destroy__ = _spacegrant_swig.delete_message_debug_sptr
    __del__ = lambda self: None

    def make(self):
        """make(message_debug_sptr self) -> message_debug_sptr"""
        return _spacegrant_swig.message_debug_sptr_make(self)


    def history(self):
        """history(message_debug_sptr self) -> unsigned int"""
        return _spacegrant_swig.message_debug_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(message_debug_sptr self, int which, int delay)
        declare_sample_delay(message_debug_sptr self, unsigned int delay)
        """
        return _spacegrant_swig.message_debug_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(message_debug_sptr self, int which) -> unsigned int"""
        return _spacegrant_swig.message_debug_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(message_debug_sptr self) -> int"""
        return _spacegrant_swig.message_debug_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(message_debug_sptr self) -> double"""
        return _spacegrant_swig.message_debug_sptr_relative_rate(self)


    def start(self):
        """start(message_debug_sptr self) -> bool"""
        return _spacegrant_swig.message_debug_sptr_start(self)


    def stop(self):
        """stop(message_debug_sptr self) -> bool"""
        return _spacegrant_swig.message_debug_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(message_debug_sptr self, unsigned int which_input) -> uint64_t"""
        return _spacegrant_swig.message_debug_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(message_debug_sptr self, unsigned int which_output) -> uint64_t"""
        return _spacegrant_swig.message_debug_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(message_debug_sptr self) -> int"""
        return _spacegrant_swig.message_debug_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(message_debug_sptr self, int m)"""
        return _spacegrant_swig.message_debug_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(message_debug_sptr self)"""
        return _spacegrant_swig.message_debug_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(message_debug_sptr self) -> bool"""
        return _spacegrant_swig.message_debug_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(message_debug_sptr self, int m)"""
        return _spacegrant_swig.message_debug_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(message_debug_sptr self) -> int"""
        return _spacegrant_swig.message_debug_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(message_debug_sptr self, int i) -> long"""
        return _spacegrant_swig.message_debug_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(message_debug_sptr self, long max_output_buffer)
        set_max_output_buffer(message_debug_sptr self, int port, long max_output_buffer)
        """
        return _spacegrant_swig.message_debug_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(message_debug_sptr self, int i) -> long"""
        return _spacegrant_swig.message_debug_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(message_debug_sptr self, long min_output_buffer)
        set_min_output_buffer(message_debug_sptr self, int port, long min_output_buffer)
        """
        return _spacegrant_swig.message_debug_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(message_debug_sptr self) -> float"""
        return _spacegrant_swig.message_debug_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(message_debug_sptr self) -> float"""
        return _spacegrant_swig.message_debug_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(message_debug_sptr self) -> float"""
        return _spacegrant_swig.message_debug_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(message_debug_sptr self) -> float"""
        return _spacegrant_swig.message_debug_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(message_debug_sptr self) -> float"""
        return _spacegrant_swig.message_debug_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(message_debug_sptr self) -> float"""
        return _spacegrant_swig.message_debug_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(message_debug_sptr self, int which) -> float
        pc_input_buffers_full(message_debug_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.message_debug_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(message_debug_sptr self, int which) -> float
        pc_input_buffers_full_avg(message_debug_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.message_debug_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(message_debug_sptr self, int which) -> float
        pc_input_buffers_full_var(message_debug_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.message_debug_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(message_debug_sptr self, int which) -> float
        pc_output_buffers_full(message_debug_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.message_debug_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(message_debug_sptr self, int which) -> float
        pc_output_buffers_full_avg(message_debug_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.message_debug_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(message_debug_sptr self, int which) -> float
        pc_output_buffers_full_var(message_debug_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.message_debug_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(message_debug_sptr self) -> float"""
        return _spacegrant_swig.message_debug_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(message_debug_sptr self) -> float"""
        return _spacegrant_swig.message_debug_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(message_debug_sptr self) -> float"""
        return _spacegrant_swig.message_debug_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(message_debug_sptr self) -> float"""
        return _spacegrant_swig.message_debug_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(message_debug_sptr self) -> float"""
        return _spacegrant_swig.message_debug_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(message_debug_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _spacegrant_swig.message_debug_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(message_debug_sptr self)"""
        return _spacegrant_swig.message_debug_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(message_debug_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _spacegrant_swig.message_debug_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(message_debug_sptr self) -> int"""
        return _spacegrant_swig.message_debug_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(message_debug_sptr self) -> int"""
        return _spacegrant_swig.message_debug_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(message_debug_sptr self, int priority) -> int"""
        return _spacegrant_swig.message_debug_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(message_debug_sptr self) -> std::string"""
        return _spacegrant_swig.message_debug_sptr_name(self)


    def symbol_name(self):
        """symbol_name(message_debug_sptr self) -> std::string"""
        return _spacegrant_swig.message_debug_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(message_debug_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.message_debug_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(message_debug_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.message_debug_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(message_debug_sptr self) -> long"""
        return _spacegrant_swig.message_debug_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(message_debug_sptr self) -> basic_block_sptr"""
        return _spacegrant_swig.message_debug_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(message_debug_sptr self, int ninputs, int noutputs) -> bool"""
        return _spacegrant_swig.message_debug_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(message_debug_sptr self) -> std::string"""
        return _spacegrant_swig.message_debug_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(message_debug_sptr self, std::string name)"""
        return _spacegrant_swig.message_debug_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(message_debug_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _spacegrant_swig.message_debug_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(message_debug_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.message_debug_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(message_debug_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.message_debug_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(message_debug_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _spacegrant_swig.message_debug_sptr_message_subscribers(self, which_port)

message_debug_sptr_swigregister = _spacegrant_swig.message_debug_sptr_swigregister
message_debug_sptr_swigregister(message_debug_sptr)


message_debug_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
message_debug = message_debug.make;

class G3RUH_descramble(object):
    """Proxy of C++ gr::spacegrant::G3RUH_descramble class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """make() -> G3RUH_descramble_sptr"""
        return _spacegrant_swig.G3RUH_descramble_make()

    make = staticmethod(make)
    __swig_destroy__ = _spacegrant_swig.delete_G3RUH_descramble
    __del__ = lambda self: None
G3RUH_descramble_swigregister = _spacegrant_swig.G3RUH_descramble_swigregister
G3RUH_descramble_swigregister(G3RUH_descramble)

def G3RUH_descramble_make():
    """G3RUH_descramble_make() -> G3RUH_descramble_sptr"""
    return _spacegrant_swig.G3RUH_descramble_make()

class G3RUH_descramble_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::spacegrant::G3RUH_descramble)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::spacegrant::G3RUH_descramble)> self) -> G3RUH_descramble_sptr
        __init__(boost::shared_ptr<(gr::spacegrant::G3RUH_descramble)> self, G3RUH_descramble p) -> G3RUH_descramble_sptr
        """
        this = _spacegrant_swig.new_G3RUH_descramble_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(G3RUH_descramble_sptr self) -> G3RUH_descramble"""
        return _spacegrant_swig.G3RUH_descramble_sptr___deref__(self)

    __swig_destroy__ = _spacegrant_swig.delete_G3RUH_descramble_sptr
    __del__ = lambda self: None

    def make(self):
        """make(G3RUH_descramble_sptr self) -> G3RUH_descramble_sptr"""
        return _spacegrant_swig.G3RUH_descramble_sptr_make(self)


    def history(self):
        """history(G3RUH_descramble_sptr self) -> unsigned int"""
        return _spacegrant_swig.G3RUH_descramble_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(G3RUH_descramble_sptr self, int which, int delay)
        declare_sample_delay(G3RUH_descramble_sptr self, unsigned int delay)
        """
        return _spacegrant_swig.G3RUH_descramble_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(G3RUH_descramble_sptr self, int which) -> unsigned int"""
        return _spacegrant_swig.G3RUH_descramble_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(G3RUH_descramble_sptr self) -> int"""
        return _spacegrant_swig.G3RUH_descramble_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(G3RUH_descramble_sptr self) -> double"""
        return _spacegrant_swig.G3RUH_descramble_sptr_relative_rate(self)


    def start(self):
        """start(G3RUH_descramble_sptr self) -> bool"""
        return _spacegrant_swig.G3RUH_descramble_sptr_start(self)


    def stop(self):
        """stop(G3RUH_descramble_sptr self) -> bool"""
        return _spacegrant_swig.G3RUH_descramble_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(G3RUH_descramble_sptr self, unsigned int which_input) -> uint64_t"""
        return _spacegrant_swig.G3RUH_descramble_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(G3RUH_descramble_sptr self, unsigned int which_output) -> uint64_t"""
        return _spacegrant_swig.G3RUH_descramble_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(G3RUH_descramble_sptr self) -> int"""
        return _spacegrant_swig.G3RUH_descramble_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(G3RUH_descramble_sptr self, int m)"""
        return _spacegrant_swig.G3RUH_descramble_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(G3RUH_descramble_sptr self)"""
        return _spacegrant_swig.G3RUH_descramble_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(G3RUH_descramble_sptr self) -> bool"""
        return _spacegrant_swig.G3RUH_descramble_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(G3RUH_descramble_sptr self, int m)"""
        return _spacegrant_swig.G3RUH_descramble_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(G3RUH_descramble_sptr self) -> int"""
        return _spacegrant_swig.G3RUH_descramble_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(G3RUH_descramble_sptr self, int i) -> long"""
        return _spacegrant_swig.G3RUH_descramble_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(G3RUH_descramble_sptr self, long max_output_buffer)
        set_max_output_buffer(G3RUH_descramble_sptr self, int port, long max_output_buffer)
        """
        return _spacegrant_swig.G3RUH_descramble_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(G3RUH_descramble_sptr self, int i) -> long"""
        return _spacegrant_swig.G3RUH_descramble_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(G3RUH_descramble_sptr self, long min_output_buffer)
        set_min_output_buffer(G3RUH_descramble_sptr self, int port, long min_output_buffer)
        """
        return _spacegrant_swig.G3RUH_descramble_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(G3RUH_descramble_sptr self) -> float"""
        return _spacegrant_swig.G3RUH_descramble_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(G3RUH_descramble_sptr self) -> float"""
        return _spacegrant_swig.G3RUH_descramble_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(G3RUH_descramble_sptr self) -> float"""
        return _spacegrant_swig.G3RUH_descramble_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(G3RUH_descramble_sptr self) -> float"""
        return _spacegrant_swig.G3RUH_descramble_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(G3RUH_descramble_sptr self) -> float"""
        return _spacegrant_swig.G3RUH_descramble_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(G3RUH_descramble_sptr self) -> float"""
        return _spacegrant_swig.G3RUH_descramble_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(G3RUH_descramble_sptr self, int which) -> float
        pc_input_buffers_full(G3RUH_descramble_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.G3RUH_descramble_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(G3RUH_descramble_sptr self, int which) -> float
        pc_input_buffers_full_avg(G3RUH_descramble_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.G3RUH_descramble_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(G3RUH_descramble_sptr self, int which) -> float
        pc_input_buffers_full_var(G3RUH_descramble_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.G3RUH_descramble_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(G3RUH_descramble_sptr self, int which) -> float
        pc_output_buffers_full(G3RUH_descramble_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.G3RUH_descramble_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(G3RUH_descramble_sptr self, int which) -> float
        pc_output_buffers_full_avg(G3RUH_descramble_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.G3RUH_descramble_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(G3RUH_descramble_sptr self, int which) -> float
        pc_output_buffers_full_var(G3RUH_descramble_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.G3RUH_descramble_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(G3RUH_descramble_sptr self) -> float"""
        return _spacegrant_swig.G3RUH_descramble_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(G3RUH_descramble_sptr self) -> float"""
        return _spacegrant_swig.G3RUH_descramble_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(G3RUH_descramble_sptr self) -> float"""
        return _spacegrant_swig.G3RUH_descramble_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(G3RUH_descramble_sptr self) -> float"""
        return _spacegrant_swig.G3RUH_descramble_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(G3RUH_descramble_sptr self) -> float"""
        return _spacegrant_swig.G3RUH_descramble_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(G3RUH_descramble_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _spacegrant_swig.G3RUH_descramble_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(G3RUH_descramble_sptr self)"""
        return _spacegrant_swig.G3RUH_descramble_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(G3RUH_descramble_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _spacegrant_swig.G3RUH_descramble_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(G3RUH_descramble_sptr self) -> int"""
        return _spacegrant_swig.G3RUH_descramble_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(G3RUH_descramble_sptr self) -> int"""
        return _spacegrant_swig.G3RUH_descramble_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(G3RUH_descramble_sptr self, int priority) -> int"""
        return _spacegrant_swig.G3RUH_descramble_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(G3RUH_descramble_sptr self) -> std::string"""
        return _spacegrant_swig.G3RUH_descramble_sptr_name(self)


    def symbol_name(self):
        """symbol_name(G3RUH_descramble_sptr self) -> std::string"""
        return _spacegrant_swig.G3RUH_descramble_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(G3RUH_descramble_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.G3RUH_descramble_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(G3RUH_descramble_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.G3RUH_descramble_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(G3RUH_descramble_sptr self) -> long"""
        return _spacegrant_swig.G3RUH_descramble_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(G3RUH_descramble_sptr self) -> basic_block_sptr"""
        return _spacegrant_swig.G3RUH_descramble_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(G3RUH_descramble_sptr self, int ninputs, int noutputs) -> bool"""
        return _spacegrant_swig.G3RUH_descramble_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(G3RUH_descramble_sptr self) -> std::string"""
        return _spacegrant_swig.G3RUH_descramble_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(G3RUH_descramble_sptr self, std::string name)"""
        return _spacegrant_swig.G3RUH_descramble_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(G3RUH_descramble_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _spacegrant_swig.G3RUH_descramble_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(G3RUH_descramble_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.G3RUH_descramble_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(G3RUH_descramble_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.G3RUH_descramble_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(G3RUH_descramble_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _spacegrant_swig.G3RUH_descramble_sptr_message_subscribers(self, which_port)

G3RUH_descramble_sptr_swigregister = _spacegrant_swig.G3RUH_descramble_sptr_swigregister
G3RUH_descramble_sptr_swigregister(G3RUH_descramble_sptr)


G3RUH_descramble_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
G3RUH_descramble = G3RUH_descramble.make;

class ax25_pdu_packer(object):
    """Proxy of C++ gr::spacegrant::ax25_pdu_packer class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(src_addr, dest_addr):
        """make(std::string const & src_addr, std::string const & dest_addr) -> ax25_pdu_packer_sptr"""
        return _spacegrant_swig.ax25_pdu_packer_make(src_addr, dest_addr)

    make = staticmethod(make)
    __swig_destroy__ = _spacegrant_swig.delete_ax25_pdu_packer
    __del__ = lambda self: None
ax25_pdu_packer_swigregister = _spacegrant_swig.ax25_pdu_packer_swigregister
ax25_pdu_packer_swigregister(ax25_pdu_packer)

def ax25_pdu_packer_make(src_addr, dest_addr):
    """ax25_pdu_packer_make(std::string const & src_addr, std::string const & dest_addr) -> ax25_pdu_packer_sptr"""
    return _spacegrant_swig.ax25_pdu_packer_make(src_addr, dest_addr)

class ax25_pdu_packer_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::spacegrant::ax25_pdu_packer)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::spacegrant::ax25_pdu_packer)> self) -> ax25_pdu_packer_sptr
        __init__(boost::shared_ptr<(gr::spacegrant::ax25_pdu_packer)> self, ax25_pdu_packer p) -> ax25_pdu_packer_sptr
        """
        this = _spacegrant_swig.new_ax25_pdu_packer_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(ax25_pdu_packer_sptr self) -> ax25_pdu_packer"""
        return _spacegrant_swig.ax25_pdu_packer_sptr___deref__(self)

    __swig_destroy__ = _spacegrant_swig.delete_ax25_pdu_packer_sptr
    __del__ = lambda self: None

    def make(self, src_addr, dest_addr):
        """make(ax25_pdu_packer_sptr self, std::string const & src_addr, std::string const & dest_addr) -> ax25_pdu_packer_sptr"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_make(self, src_addr, dest_addr)


    def history(self):
        """history(ax25_pdu_packer_sptr self) -> unsigned int"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(ax25_pdu_packer_sptr self, int which, int delay)
        declare_sample_delay(ax25_pdu_packer_sptr self, unsigned int delay)
        """
        return _spacegrant_swig.ax25_pdu_packer_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(ax25_pdu_packer_sptr self, int which) -> unsigned int"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(ax25_pdu_packer_sptr self) -> int"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(ax25_pdu_packer_sptr self) -> double"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_relative_rate(self)


    def start(self):
        """start(ax25_pdu_packer_sptr self) -> bool"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_start(self)


    def stop(self):
        """stop(ax25_pdu_packer_sptr self) -> bool"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(ax25_pdu_packer_sptr self, unsigned int which_input) -> uint64_t"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(ax25_pdu_packer_sptr self, unsigned int which_output) -> uint64_t"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(ax25_pdu_packer_sptr self) -> int"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(ax25_pdu_packer_sptr self, int m)"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ax25_pdu_packer_sptr self)"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ax25_pdu_packer_sptr self) -> bool"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(ax25_pdu_packer_sptr self, int m)"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(ax25_pdu_packer_sptr self) -> int"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(ax25_pdu_packer_sptr self, int i) -> long"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ax25_pdu_packer_sptr self, long max_output_buffer)
        set_max_output_buffer(ax25_pdu_packer_sptr self, int port, long max_output_buffer)
        """
        return _spacegrant_swig.ax25_pdu_packer_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(ax25_pdu_packer_sptr self, int i) -> long"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ax25_pdu_packer_sptr self, long min_output_buffer)
        set_min_output_buffer(ax25_pdu_packer_sptr self, int port, long min_output_buffer)
        """
        return _spacegrant_swig.ax25_pdu_packer_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(ax25_pdu_packer_sptr self) -> float"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(ax25_pdu_packer_sptr self) -> float"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ax25_pdu_packer_sptr self) -> float"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(ax25_pdu_packer_sptr self) -> float"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(ax25_pdu_packer_sptr self) -> float"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(ax25_pdu_packer_sptr self) -> float"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ax25_pdu_packer_sptr self, int which) -> float
        pc_input_buffers_full(ax25_pdu_packer_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.ax25_pdu_packer_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(ax25_pdu_packer_sptr self, int which) -> float
        pc_input_buffers_full_avg(ax25_pdu_packer_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.ax25_pdu_packer_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ax25_pdu_packer_sptr self, int which) -> float
        pc_input_buffers_full_var(ax25_pdu_packer_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.ax25_pdu_packer_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ax25_pdu_packer_sptr self, int which) -> float
        pc_output_buffers_full(ax25_pdu_packer_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.ax25_pdu_packer_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(ax25_pdu_packer_sptr self, int which) -> float
        pc_output_buffers_full_avg(ax25_pdu_packer_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.ax25_pdu_packer_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ax25_pdu_packer_sptr self, int which) -> float
        pc_output_buffers_full_var(ax25_pdu_packer_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.ax25_pdu_packer_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(ax25_pdu_packer_sptr self) -> float"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(ax25_pdu_packer_sptr self) -> float"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(ax25_pdu_packer_sptr self) -> float"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(ax25_pdu_packer_sptr self) -> float"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(ax25_pdu_packer_sptr self) -> float"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(ax25_pdu_packer_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(ax25_pdu_packer_sptr self)"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(ax25_pdu_packer_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(ax25_pdu_packer_sptr self) -> int"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(ax25_pdu_packer_sptr self) -> int"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(ax25_pdu_packer_sptr self, int priority) -> int"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(ax25_pdu_packer_sptr self) -> std::string"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_name(self)


    def symbol_name(self):
        """symbol_name(ax25_pdu_packer_sptr self) -> std::string"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(ax25_pdu_packer_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(ax25_pdu_packer_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(ax25_pdu_packer_sptr self) -> long"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(ax25_pdu_packer_sptr self) -> basic_block_sptr"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(ax25_pdu_packer_sptr self, int ninputs, int noutputs) -> bool"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(ax25_pdu_packer_sptr self) -> std::string"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(ax25_pdu_packer_sptr self, std::string name)"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(ax25_pdu_packer_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _spacegrant_swig.ax25_pdu_packer_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(ax25_pdu_packer_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(ax25_pdu_packer_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(ax25_pdu_packer_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _spacegrant_swig.ax25_pdu_packer_sptr_message_subscribers(self, which_port)

ax25_pdu_packer_sptr_swigregister = _spacegrant_swig.ax25_pdu_packer_sptr_swigregister
ax25_pdu_packer_sptr_swigregister(ax25_pdu_packer_sptr)


ax25_pdu_packer_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ax25_pdu_packer = ax25_pdu_packer.make;

class ax25_pdu_unpacker(object):
    """Proxy of C++ gr::spacegrant::ax25_pdu_unpacker class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(addr_filt, src_addr, dest_addr):
        """make(int addr_filt, std::string const & src_addr, std::string const & dest_addr) -> ax25_pdu_unpacker_sptr"""
        return _spacegrant_swig.ax25_pdu_unpacker_make(addr_filt, src_addr, dest_addr)

    make = staticmethod(make)
    __swig_destroy__ = _spacegrant_swig.delete_ax25_pdu_unpacker
    __del__ = lambda self: None
ax25_pdu_unpacker_swigregister = _spacegrant_swig.ax25_pdu_unpacker_swigregister
ax25_pdu_unpacker_swigregister(ax25_pdu_unpacker)

def ax25_pdu_unpacker_make(addr_filt, src_addr, dest_addr):
    """ax25_pdu_unpacker_make(int addr_filt, std::string const & src_addr, std::string const & dest_addr) -> ax25_pdu_unpacker_sptr"""
    return _spacegrant_swig.ax25_pdu_unpacker_make(addr_filt, src_addr, dest_addr)

class ax25_pdu_unpacker_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::spacegrant::ax25_pdu_unpacker)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::spacegrant::ax25_pdu_unpacker)> self) -> ax25_pdu_unpacker_sptr
        __init__(boost::shared_ptr<(gr::spacegrant::ax25_pdu_unpacker)> self, ax25_pdu_unpacker p) -> ax25_pdu_unpacker_sptr
        """
        this = _spacegrant_swig.new_ax25_pdu_unpacker_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(ax25_pdu_unpacker_sptr self) -> ax25_pdu_unpacker"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr___deref__(self)

    __swig_destroy__ = _spacegrant_swig.delete_ax25_pdu_unpacker_sptr
    __del__ = lambda self: None

    def make(self, addr_filt, src_addr, dest_addr):
        """make(ax25_pdu_unpacker_sptr self, int addr_filt, std::string const & src_addr, std::string const & dest_addr) -> ax25_pdu_unpacker_sptr"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_make(self, addr_filt, src_addr, dest_addr)


    def history(self):
        """history(ax25_pdu_unpacker_sptr self) -> unsigned int"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(ax25_pdu_unpacker_sptr self, int which, int delay)
        declare_sample_delay(ax25_pdu_unpacker_sptr self, unsigned int delay)
        """
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(ax25_pdu_unpacker_sptr self, int which) -> unsigned int"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(ax25_pdu_unpacker_sptr self) -> int"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(ax25_pdu_unpacker_sptr self) -> double"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_relative_rate(self)


    def start(self):
        """start(ax25_pdu_unpacker_sptr self) -> bool"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_start(self)


    def stop(self):
        """stop(ax25_pdu_unpacker_sptr self) -> bool"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(ax25_pdu_unpacker_sptr self, unsigned int which_input) -> uint64_t"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(ax25_pdu_unpacker_sptr self, unsigned int which_output) -> uint64_t"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(ax25_pdu_unpacker_sptr self) -> int"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(ax25_pdu_unpacker_sptr self, int m)"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ax25_pdu_unpacker_sptr self)"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ax25_pdu_unpacker_sptr self) -> bool"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(ax25_pdu_unpacker_sptr self, int m)"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(ax25_pdu_unpacker_sptr self) -> int"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(ax25_pdu_unpacker_sptr self, int i) -> long"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ax25_pdu_unpacker_sptr self, long max_output_buffer)
        set_max_output_buffer(ax25_pdu_unpacker_sptr self, int port, long max_output_buffer)
        """
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(ax25_pdu_unpacker_sptr self, int i) -> long"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ax25_pdu_unpacker_sptr self, long min_output_buffer)
        set_min_output_buffer(ax25_pdu_unpacker_sptr self, int port, long min_output_buffer)
        """
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(ax25_pdu_unpacker_sptr self) -> float"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(ax25_pdu_unpacker_sptr self) -> float"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ax25_pdu_unpacker_sptr self) -> float"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(ax25_pdu_unpacker_sptr self) -> float"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(ax25_pdu_unpacker_sptr self) -> float"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(ax25_pdu_unpacker_sptr self) -> float"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ax25_pdu_unpacker_sptr self, int which) -> float
        pc_input_buffers_full(ax25_pdu_unpacker_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(ax25_pdu_unpacker_sptr self, int which) -> float
        pc_input_buffers_full_avg(ax25_pdu_unpacker_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ax25_pdu_unpacker_sptr self, int which) -> float
        pc_input_buffers_full_var(ax25_pdu_unpacker_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ax25_pdu_unpacker_sptr self, int which) -> float
        pc_output_buffers_full(ax25_pdu_unpacker_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(ax25_pdu_unpacker_sptr self, int which) -> float
        pc_output_buffers_full_avg(ax25_pdu_unpacker_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ax25_pdu_unpacker_sptr self, int which) -> float
        pc_output_buffers_full_var(ax25_pdu_unpacker_sptr self) -> pmt_vector_float
        """
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(ax25_pdu_unpacker_sptr self) -> float"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(ax25_pdu_unpacker_sptr self) -> float"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(ax25_pdu_unpacker_sptr self) -> float"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(ax25_pdu_unpacker_sptr self) -> float"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(ax25_pdu_unpacker_sptr self) -> float"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(ax25_pdu_unpacker_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(ax25_pdu_unpacker_sptr self)"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(ax25_pdu_unpacker_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(ax25_pdu_unpacker_sptr self) -> int"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(ax25_pdu_unpacker_sptr self) -> int"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(ax25_pdu_unpacker_sptr self, int priority) -> int"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(ax25_pdu_unpacker_sptr self) -> std::string"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_name(self)


    def symbol_name(self):
        """symbol_name(ax25_pdu_unpacker_sptr self) -> std::string"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(ax25_pdu_unpacker_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(ax25_pdu_unpacker_sptr self) -> io_signature_sptr"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(ax25_pdu_unpacker_sptr self) -> long"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(ax25_pdu_unpacker_sptr self) -> basic_block_sptr"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(ax25_pdu_unpacker_sptr self, int ninputs, int noutputs) -> bool"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(ax25_pdu_unpacker_sptr self) -> std::string"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(ax25_pdu_unpacker_sptr self, std::string name)"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(ax25_pdu_unpacker_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(ax25_pdu_unpacker_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(ax25_pdu_unpacker_sptr self) -> swig_int_ptr"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(ax25_pdu_unpacker_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _spacegrant_swig.ax25_pdu_unpacker_sptr_message_subscribers(self, which_port)

ax25_pdu_unpacker_sptr_swigregister = _spacegrant_swig.ax25_pdu_unpacker_sptr_swigregister
ax25_pdu_unpacker_sptr_swigregister(ax25_pdu_unpacker_sptr)


ax25_pdu_unpacker_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ax25_pdu_unpacker = ax25_pdu_unpacker.make;



